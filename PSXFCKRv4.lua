do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v64=0;while true do if (v64==0) then v18=v0(v3(v29,1,1));return "";end end else local v65=0;local v66;while true do if (v65==0) then v66=v2(v0(v29,16));if v18 then local v83=v5(v66,v18);v18=nil;return v83;else return v66;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v67=(v30/((1 + 1)^(v31-(1 + 0))))%(2^(((v32-(1 + 0)) -(v31-(1098 -(748 + 349)))) + (108 -(34 + 73))));return v67-(v67%(1 + 0 + (0 -0)));else local v68=0;local v69;while true do if (v68==(0 -0)) then v69=(415 -(316 + (239 -142)))^(v31-(1880 -(212 + 1667)));return (((v30%(v69 + v69))>=v69) and 1) or (0 -0);end end end end local function v20()local v37=0 + 0;local v38;while true do if (v37==(1283 -(21 + 1261))) then return v38;end if (v37==(0 -0)) then v38=v1(v15,v17,v17);v17=v17 + (1 -(0 -0));v37=1855 -(1173 + 681);end end end local function v21()local v39=0 -0;local v40;local v41;while true do if (v39==0) then v40,v41=v1(v15,v17,v17 + (289 -(39 + 248)));v17=v17 + (326 -((936 -(615 + 134)) + 137));v39=259 -(164 + 94);end if (v39==(1284 -(504 + (2462 -(1010 + 673))))) then return (v41 * (81 + 175)) + v40;end end end local function v22()local v42=0 + 0;local v43;local v44;local v45;local v46;while true do if ((0 + 0 + 0)==v42) then v43,v44,v45,v46=v1(v15,v17,v17 + 1 + 2);v17=v17 + 1 + 3;v42=1490 -(158 + 678 + 653);end if ((1034 -(124 + 909))==v42) then return (v46 * (29700377 -12923161)) + (v45 * 65536) + (v44 * (687 -431)) + v43;end end end local function v23()local v47=0 + 0;local v48;local v49;while true do if (v47==((2049 -621) -(980 + 448))) then v48=v22();v49=v22();v47=1 + 0;end if ((1 + 0)==v47) then return (( -(2 + 0) * v19(v49,32)) + (1839 -(675 + (1877 -(319 + 395))))) * (2^(v19(v49,(38 + 30) -47,132 -101) -(2331 -(623 + 685)))) * ((((v19(v49,(420 -(222 + 197)) + 0,89 -69) * ((2 + 0)^(87 -55))) + v48)/((1 + 1)^(8 + 44))) + 1 + 0);end end end local function v24(v33)local v50=0 + 0;local v51;local v52;while true do if (v50==(299 -((1809 -(966 + 648)) + 101))) then return v6(v52);end if ((1 + 0)==v50) then v51=v3(v15,v17,(v17 + v33) -(1 + 0));v17=v17 + v33;v50=5 -3;end if (v50==0) then v51=nil;if  not v33 then v33=v22();if (v33==((1731 -(771 + 960)) + 0 + 0)) then return "";end end v50=1 + 0;end if (v50==(3 -(1 + 0))) then v52={};for v79=1, #v51 do v52[v79]=v2(v1(v3(v51,v79,v79)));end v50=5 -2;end end end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v53=0 -0;local v54;local v55;local v56;local v57;local v58;local v59;local v60;while true do if (v53~=(1967 -(513 + 1451))) then else v60=nil;while true do local v81=0 -0;local v82;while true do if (v81==(849 -(380 + 469))) then v82=613 -(540 + 73);while true do if (v82~=(1099 -(141 + 958))) then else if (v54==(0 -0)) then local v102=0 + 0;local v103;while true do if (v102~=0) then else v103=0 + 0;while true do if (v103==0) then local v110=0 + 0;while true do if (v110~=(2 -1)) then else v103=920 -(25 + 894);break;end if (v110==(0 -0)) then v55={};v56={};v110=1 + 0;end end end if (v103==(2 -1)) then local v111=0 + 0;while true do if (v111==0) then v57={};v58={v55,v56,nil,v57};v111=1 -0;end if (v111~=1) then else v103=1965 -(426 + 1537);break;end end end if (v103==(4 -2)) then v54=1;break;end end break;end end end if (v54==(3 -2)) then local v104=0 + 0;local v105;while true do if (v104~=(0 + 0)) then else v105=0 + 0;while true do if (v105==(1419 -(891 + 526))) then v54=2 + 0;break;end if (v105==(684 -(321 + 363))) then v59=v22();v60={};v105=3 -2;end if (v105==(1 + 0)) then local v112=0 -0;while true do if (v112~=(885 -(385 + 500))) then else for v119=1,v59 do local v120=0;local v121;local v122;while true do if (v120==(0 + 0)) then local v187=0;while true do if (v187~=0) then else local v203=1876 -(1286 + 590);while true do if (v203~=0) then else v121=v20();v122=nil;v203=1353 -(1010 + 342);end if (v203==(4 -3)) then v187=1;break;end end end if (v187~=(1 + 0)) then else v120=785 -(136 + 648);break;end end end if ((1 -0)~=v120) then else if (v121==1) then v122=v20()~=(0 + 0);elseif (v121==(1 + 1)) then v122=v23();elseif (v121~=(4 -1)) then else v122=v24();end v60[v119]=v122;break;end end end v58[2 + 1]=v20();v112=1 + 0;end if ((2 -1)==v112) then v105=2 -0;break;end end end end break;end end end v82=1 + 0;end if (v82~=1) then else if (v54~=(1 + 1)) then else local v106=0 -0;while true do local v107=0 + 0;while true do if (v107==0) then if (v106==(1178 -(8 + 1170))) then local v113=131 -(93 + 38);while true do if (v113~=1) then else v106=1 -0;break;end if (v113==(0 -0)) then local v118=1986 -(1127 + 859);while true do if (v118==(1 -0)) then v113=1;break;end if (v118==(0 + 0)) then for v189=1215 -(652 + 562),v22() do local v190=0 + 0;local v191;local v192;local v193;local v194;while true do if (v190==(1 + 1)) then while true do if (v191~=(1 + 0)) then else v194=nil;while true do if (v192==(1 + 0)) then while true do if (v193==(0 -0)) then v194=v20();if (v19(v194,757 -(22 + 734),1130 -(529 + 600))==(771 -(568 + 203))) then local v273=916 -(65 + 851);local v274;local v275;local v276;local v277;local v278;while true do if (v273==(2 -1)) then v276=nil;v277=nil;v273=1345 -(63 + 1280);end if (v273==(0 + 0)) then local v287=696 -(474 + 222);while true do if (v287==(1 + 0)) then v273=2 -1;break;end if (v287~=0) then else v274=0 + 0;v275=nil;v287=1;end end end if (v273~=(2 -0)) then else v278=nil;while true do if (v274==2) then while true do if (v275~=(0 -0)) then else local v299=0 + 0;local v300;while true do if (v299==(0 + 0)) then v300=0 + 0;while true do if (v300==(307 -(183 + 124))) then v276=v19(v194,3 -1,3);v277=v19(v194,604 -(461 + 139),5 + 1);v300=2 -1;end if (v300~=(2 -1)) then else v275=1;break;end end break;end end end if (v275==(13 -10)) then if (v19(v277,8 -5,1 + 2)==1) then v278[11 -7]=v60[v278[316 -(20 + 292)]];end v55[v189]=v278;break;end if (v275~=(1 + 1)) then else local v302=0;local v303;local v304;while true do if (v302~=(2 -1)) then else while true do if ((131 -(52 + 79))==v303) then v304=847 -(793 + 54);while true do if (v304~=(0 + 0)) then else local v312=0 -0;while true do if (v312==0) then if (v19(v277,1,4 -3)==(1284 -(670 + 613))) then v278[2]=v60[v278[9 -7]];end if (v19(v277,1 + 1,2)~=(2 -1)) then else v278[3 -0]=v60[v278[7 -4]];end v312=1 + 0;end if (v312==(1 + 0)) then v304=514 -(288 + 225);break;end end end if ((71 -(15 + 55))==v304) then v275=962 -(915 + 44);break;end end break;end end break;end if ((394 -(82 + 312))~=v302) then else v303=0;v304=nil;v302=711 -(179 + 531);end end end if (1==v275) then local v305=0;while true do if (v305==1) then v275=1018 -(738 + 278);break;end if (v305==(0 + 0)) then local v309=0 -0;local v310;while true do if (v309~=(0 -0)) then else v310=0;while true do if (v310~=1) then else v305=1 + 0;break;end if ((994 -(502 + 492))~=v310) then else local v313=0;while true do if (v313==(2 -1)) then v310=1 + 0;break;end if (v313==0) then v278={v21(),v21(),nil,nil};if (v276==(0 + 0)) then local v318=0;local v319;while true do if (v318==(1445 -(1168 + 277))) then v319=0;while true do if (v319~=(1826 -(1762 + 64))) then else v278[14 -11]=v21();v278[2 + 2]=v21();break;end end break;end end elseif (v276==(1773 -(1660 + 112))) then v278[3 + 0]=v22();elseif (v276==2) then v278[3]=v22() -(2^(11 + 5));elseif (v276~=(11 -8)) then else local v324=0 -0;local v325;local v326;while true do if ((807 -(362 + 445))~=v324) then else v325=0 -0;v326=nil;v324=1579 -(1041 + 537);end if (v324~=(1 -0)) then else while true do if (v325==0) then v326=0 + 0;while true do if ((800 -(714 + 86))==v326) then v278[3]=v22() -(2^16);v278[4]=v21();break;end end break;end end break;end end end v313=2 -1;end end end end break;end end end end end end break;end if (v274==(0 -0)) then local v295=0;while true do if (v295==(0 -0)) then v275=0;v276=nil;v295=1;end if (v295~=(237 -(174 + 62))) then else v274=2 -1;break;end end end if (v274==(1 + 0)) then v277=nil;v278=nil;v274=2;end end break;end end end break;end end break;end if (0==v192) then local v248=0;while true do if (v248==0) then v193=0 + 0;v194=nil;v248=43 -(12 + 30);end if ((1 + 0)==v248) then v192=1 -0;break;end end end end break;end if (v191==0) then local v223=0 + 0;while true do if (v223==(1 + 0)) then v191=1784 -(25 + 1758);break;end if (v223==(0 + 0)) then v192=1671 -(1570 + 101);v193=nil;v223=1 + 0;end end end end break;end if ((1 + 0)~=v190) then else v193=nil;v194=nil;v190=2 + 0;end if (v190~=0) then else v191=0;v192=nil;v190=1 + 0;end end end for v195=522 -(335 + 186),v22() do v56[v195-(1 -0)]=v27();end v118=1 + 0;end end end end end if ((2 -1)~=v106) then else local v114=0 + 0;while true do if (v114==(0 + 0)) then for v123=1 + 0,v22() do v57[v123]=v22();end return v58;end end end break;end end end end break;end end break;end end end break;end if (v53==0) then local v76=0 + 0;while true do if (v76~=(0 -0)) then else v54=1400 -(312 + 1088);v55=nil;v76=1 + 0;end if (v76~=(2 -1)) then else v53=1 + 0;break;end end end if (v53==1) then local v77=0;while true do if (v77==0) then v56=nil;v57=nil;v77=1 + 0;end if (v77==(3 -2)) then v53=2;break;end end end if (v53==2) then local v78=0;while true do if ((0 -0)==v78) then v58=nil;v59=nil;v78=2 -1;end if (v78~=(4 -3)) then else v53=11 -8;break;end end end end end local function v28(v34,v35,v36)local v61=v34[1];local v62=v34[2];local v63=v34[3];return function(...)local v70=0;local v71;local v72;local v73;local v74;local v75;while true do if (v70==1) then v73={...};v74=v11("#",...) -1;v70=2;end if (v70==2) then v75=nil;v75=function()local v84=v61;local v85=v62;local v86=v63;local v87=v26;local v88={};local v89={};local v90={};for v95=0 + (1653 -(238 + 1415)),v74 do if (((8952 -5206)>(3321 -(1550 + 203))) and (v95>=v86)) then v88[v95-v86]=v73[v95 + 1 + 0];else v90[v95]=v73[v95 + 1 + 0];end end local v91=(v74-v86) + 1;local v92;local v93;while true do local v96=680 -(646 + 34);local v97;while true do if (((2533 -1918)<=(5539 -(441 + 710))) and ((0 -0)==v96)) then v97=0 -0;while true do if ((v97==(1 -0)) or ((377 + 4396)==(877 + 2708))) then if (((3773 -(1586 + 14))<(3408 -(63 + 1167))) and (v93<=12)) then if (((714 + 2129)<(3807 -(9 + 82))) and (v93<=(1243 -(1106 + 132)))) then if (((6359 -(791 + 745))==(5818 -(915 + 80))) and (v93<=(1 + 1))) then if ((((6086 -(42 + 494)) -(649 + 393))>(161 + 781)) and (v93<=(0 -0))) then v90[v92[2 + 0]]={};elseif (((536 + 75)<(11531 -6664)) and (v93==(1 -0))) then v90[v92[1701 -((1867 -1075) + 907)]]=v28(v85[v92[5 -2]],nil,v36);else local v137=534 -(158 + 376);local v138;local v139;while true do if (((7429 -4754)>(468 + 446)) and (v137==((5 -3) -1))) then while true do if ((v138==(0 + 0)) or ((38 + 472)>=(5503 -3014))) then v139=v92[2 + 0];v90[v139]=v90[v139](v12(v90,v139 + 1 + 0,v72));break;end end break;end if ((v137==(0 + 0)) or (((23604 -13519) -5851)<(6231 -3282))) then v138=0 -0;v139=nil;v137=1 -0;end end end elseif ((v93<=(3 + 0)) or ((362 + 1252)>=(3640 -((869 -612) + 1141)))) then local v126=0 + 0;local v127;local v128;local v129;while true do if ((v126==(0 + 0)) or (((4097 -2532) + 796)==(6103 -2548))) then v127=0 -0;v128=nil;v126=1 + 0;end if (((819 -587)<=(16104 -11715)) and (v126==(1 -0))) then v129=nil;while true do if ((v127==(0 -0)) or ((3487 -2322)>(2964 -(270 + 682)))) then v128=v92[2 + 0];v129=v90[v128];v127=1 + 0;end if ((v127==(1 -0)) or (464>=(5549 -1600))) then for v207=v128 + 1,v92[3 -0] do v7(v129,v90[v207]);end break;end end break;end end elseif (((1561 + 291)<=(4417 -(602 + 749))) and (v93>(1989 -(19 + 1966)))) then v90[v92[100 -(43 + 55)]][v92[(1331 -(141 + 1188)) + 1]]=v90[v92[3 + (1940 -(146 + 1793))]];else local v142=(1349 -(662 + 548)) -(14 + 26 + 99);local v143;local v144;local v145;while true do if (((4032 + 102)>=((955 -355) + 944)) and (v142==(0 + 0))) then v143=660 -(119 + 541);v144=nil;v142=1;end if ((v142==(1 + 0)) or ((13 + 18)>=2439)) then v145=nil;while true do if ((4460>=(3477 -1700)) and (v143==(0 + 0))) then local v210=0 -(1626 -(1262 + 364));while true do if (((5685 -(1081 + 490))>(53 + (100 -28))) and (v210==(1574 -(1147 + 426)))) then v143=1 + (0 -0);break;end if ((v210==(0 + 0)) or ((6729 -(5478 -(209 + 386)))>=(2207 -(147 + 141)))) then v144=v92[2 + 0];v145=v90[v92[9 -(19 -13)]];v210=1949 -(1078 + 870);end end end if ((v143==(1 -0)) or ((17 + 122)>=(74 + (366 -286)))) then v90[v144 + 1 + 0]=v145;v90[v144]=v145[v92[1 + 3]];break;end end break;end end end elseif (((6664 -(5318 -(1194 + 120)))>=(8391 -5936)) and (v93<=(935 -(150 + 777)))) then if (((156 + 80)<=(3056 + (2132 -(418 + 1520)))) and (v93<=(5 + 1))) then do return;end elseif (((31 + 4550)>(7397 -4074)) and (v93==(1 + 6))) then v36[v92[8 -5]]=v90[v92[1738 -(1057 + 215 + 464)]];else v90[v92[1328 -(936 + 390)]]=v35[v92[12 -9]];end elseif ((v93<=(4 + 1 + 3 + 2)) or ((7038 -5055)<(1633 -977))) then if ((4026>=(3437 -(1260 + 138))) and (v93==(22 -13))) then v90[v92[3 -1]]=v36[v92[(141 -(4 + 128)) -6]];else for v197=v92[2 -0],v92[3 -0] do v90[v197]=nil;end end elseif ((v93>(26 -(15 + 0))) or ((1456 + 1184)>(10836 -6676))) then if (((4712 -1703)>=(8587 -5583)) and (v92[6 -(10 -6)]==v90[v92[1312 -(224 + 1084)]])) then v71=v71 + (2 -1);else v71=v92[2 + 1];end else local v152=(0 -0) -0;local v153;local v154;while true do if (((1882 -(1281 + 601))==v152) or ((905 + 404)>(4533 -(328 + (1777 -(890 + 792)))))) then v153=0 + 0;v154=nil;v152=3 -2;end if (((1117 -788)<(1268 + 492)) and (v152==(1 -0))) then while true do if (((4053 -(55 + 118))>=(1479 -998)) and (v153==((1653 -(633 + 1020)) + (17 -(16 + 1))))) then v154=v92[1 + 1];v90[v154](v90[v154 + (827 -(140 + 686))]);break;end end break;end end end elseif (((7808 -5154)<(1806 + 1018)) and (v93<=(45 -26))) then if ((v93<=((507 -(59 + 447)) + 14)) or ((4010 -(70 + 73))<=(1940 -(98 + 239)))) then if (((1068 -435)<(7821 -3324)) and (v93<=(736 -(470 + 253)))) then local v130=429 -(332 + 97);local v131;local v132;local v133;local v134;local v135;while true do if (((1782 + 845)<4331) and ((1 + 1)==v130)) then v135=nil;while true do if (((2426 -(629 + 211))<(3012 -(210 + 96))) and (v131==(5 -3))) then while true do if (((529 + 163 + 136)<=(4445 -1681)) and (v132==1)) then v135=v92[(2 + 2) -1];for v238=1 -0,v135 do v134[v238]=v90[v133 + v238];end break;end if ((v132==0) or ((1500 + 1472 + 1635)<(6771 -4423))) then local v225=1610 -(1500 + 110);local v226;while true do if (((13043 -9764)>(2029 -(90 + 1245))) and (v225==(0 -0))) then v226=0 -0;while true do if ((v226==(1 + 0)) or ((2476 -994)>(4820 -(12 + 1)))) then v132=1 + 0;break;end if (((1718 -(969 -(153 + 399)))<(5578 -3550)) and (v226==(0 -(0 -0)))) then local v262=0;while true do if ((v262==(509 -(242 + 266))) or ((3341 -(428 + 304))<=(326 + 717))) then v226=1 + 0;break;end if (((803 -(37 + 766))==v262) or ((232 + 87)>=(3169 -(256 + 160)))) then v133=v92[778 -(119 + 657)];v134=v90[v133];v262=3 -2;end end end end break;end end end end break;end if (((12962 -8281)>=((1570 + 156) -687)) and (v131==((2468 -1918) -(38 + 512)))) then local v206=821 -(125 + 696);while true do if ((v206==(275 -(114 + 160))) or ((1021 -(783 + 235))>(482 + 3653))) then v131=1971 -(947 + 1023);break;end if (((16265 -12979)==(2949 + 337)) and (v206==((1200 -(1070 + 130)) + 0))) then v132=0 + 0;v133=nil;v206=2 -1;end end end if (((12546 -8970)==(4620 -(486 + 558))) and (v131==((2 + 0) -1))) then v134=nil;v135=nil;v131=(441 + 709) -(564 + 584);end end break;end if ((v130==((2284 -1053) -(1171 + 59))) or ((456 + 2260)<(3817 -2262))) then v133=nil;v134=nil;v130=(5 -3) + 0;end if ((v130==(0 -(0 -0))) or ((99 + 135 + 1108)==(3046 -(160 + 9)))) then v131=0 -0;v132=nil;v130=1 + 0;end end elseif (((5619 -(740 + 15))==(2523 + 2341)) and (v93==(13 + 1))) then if ((v90[v92[7 -(361 -(201 + 155))]]==v92[226 -(99 + 123)]) or ((9019 -6149)==(3163 -(215 + 246)))) then v71=v71 + 1 + 0;else v71=v92[2 + 1];end else local v155=0 + 0;local v156;while true do if ((v155==(0 + 0)) or ((4763 -1331)<(1790 -(722 + 110)))) then v156=v92[610 -(516 + 92)];v90[v156]=v90[v156](v12(v90,v156 + ((3 -1) -1),v92[931 -(34 + 136 + 758)]));break;end end end elseif (((371 + 560)>(42 -25)) and (v93<=(2 + 15))) then if (((8045 -5444)>=(197 + (1120 -(184 + 175)))) and (v93==(229 -(55 + 158)))) then v90[v92[1 + 1]]=v92[529 -(130 + 396)];else v71=v92[1134 -(521 + 610)];end elseif (((11455 -7769)>((351 -269) + 2099 + 471)) and (v93==(190 -(103 + 69)))) then local v160=0 + 0;local v161;local v162;local v163;while true do if ((v160==(1127 -(285 + 841))) or ((195 -118)>=(202 + 1334 + 1155))) then v163=nil;while true do if ((3568>(2561 -(287 + 416))) and (v161==((2742 -(288 + 868)) -(138 + 1448)))) then local v215=631 -(334 + 297);while true do if ((v215==(0 + 0)) or ((12408 -8133)<(7113 -3771))) then v162=0 + 0;v163=nil;v215=1 + 0;end if ((2625>=(2411 -(972 + (1966 -1333)))) and (v215==(1353 -((3149 -1991) + 194)))) then v161=1 + 0;break;end end end if (((3034 -1237)<(1079 + (5619 -3652))) and (v161==(1 + 0))) then while true do if ((v162==(0 -0)) or ((12867 -8405)<=(4974 -((381 -239) + 723)))) then v163=v92[1 + 1];v90[v163]=v90[v163]();break;end end break;end end break;end if (((1640 + 2560)==(840 + 3360)) and (v160==(0 -0))) then v161=0 -(0 -0);v162=nil;v160=323 -(278 + 44);end end else local v164=570 -(299 + 271);local v165;local v166;while true do if ((v164==(537 -(52 + 484))) or ((2921 -2310)==((6443 -(1017 + 270)) -3405))) then while true do if (((1869 -648)==(6 + 1215)) and (v165==(465 -(340 + 125)))) then v166=v92[(420 -(147 + 270)) -1];v90[v166](v12(v90,v166 + 1 + 0,v92[4 -1]));break;end end break;end if ((v164==((76 + 135) -(175 + 36))) or ((597 + 384)==(545 + (2952 -2107)))) then v165=0 + 0;v166=nil;v164=1 + 0;end end end elseif (((1840 -900)==(681 + 259)) and (v93<=(4 + 18))) then if ((v93<=(34 -14)) or (((1978 -743) + 1482)<=(3775 -2466))) then v90[v92[1 + 1]]();elseif ((v93==(661 -(511 + 129))) or ((10025 -6024)<(7634 -4822))) then local v167=0 + 0;local v168;local v169;local v170;local v171;local v172;while true do if (((0 + 0)==v167) or ((4461 -1871)>(7089 -3830))) then v168=1635 -(730 + 905);v169=nil;v167=1 + 0;end if (((292 + 2705)==(946 + (6642 -4591))) and (v167==(37 -(12 + 2 + 22)))) then v170=nil;v171=nil;v167=1538 -(1482 + 7 + 47);end if (((3755 -(705 + (585 -(59 + 65))))>(1008 + 1304)) and (v167==(5 -3))) then v172=nil;while true do if ((407<(730 -(8 + 21))) and (v168==(1 + 0))) then local v217=0 + 0;while true do if (((3980 + (1795 -(541 + 1027)))==(887 + 3320)) and (v217==(0 -0))) then v72=(v171 + v169) -(1 + 0);v172=517 -(236 + 281);v217=1 + 0;end if ((v217==(3 -2)) or ((1521 -911)>(351 + 1158 + 121))) then v168=2 -0;break;end end end if (((1281 + 123)==(310 + 1094)) and (v168==(0 + (0 -0)))) then local v218=0 -0;while true do if ((v218==(1 + 0)) or ((940 + 1439)<(584 -458))) then v168=2 -1;break;end if (((1549 -(800 + 749))==v218) or ((694 + 1418)>=((7806 + 381) -5740))) then v169=v92[1 + 1 + 0];v170,v171=v87(v90[v169](v12(v90,v169 + (69 -(51 + 17)),v92[6 -3])));v218=3 -2;end end end if ((10<(608 -(46 + 215))) and (v168==(3 -1))) then for v227=v169,v72 do local v228=0 -0;local v229;while true do if (((7640 -4966)<(231 + 3671)) and (v228==(675 -(250 + 58 + 367)))) then v229=1214 -((1192 -862) + 884);while true do if (((3377 + 1487)==(7937 -(7001 -3928))) and (v229==((0 -0) -0))) then v172=v172 + 1 + 0;v90[v227]=v170[v172];break;end end break;end end end break;end end break;end end else v90[v92[1 + 1]]=v92[1844 -(348 + 1493)]~=(0 + 0);end elseif ((3912>=(134 + 120 + 1643)) and (v93<=(20 + 4))) then if (((7629 -3571)>=(3330 -(464 + 72))) and (v93>(66 -43))) then v90[v92[5 -3]][v92[3 + 0]]=v92[5 -1];else local v176=(1724 -(244 + 380)) -(923 + 177);local v177;local v178;local v179;local v180;while true do if (((11188 -7733)<=(3628 + 936)) and (v176==(2 -0))) then while true do if ((v177==(56 -(5 + 51))) or ((2120 -(1722 + 160))>=(5586 -(1168 + 383)))) then local v219=0 -(0 -0);while true do if (((6817 -5343)>=(3830 -2406)) and (v219==(830 -(293 + 537)))) then v178=v85[v92[1829 -(750 + 1076)]];v179=nil;v219=1 -0;end if ((v219==((328 + 47) -(107 + 267))) or ((11297 -(3003 + 3729))<=(3019 + 6))) then v177=1;break;end end end if ((v177==(2 + 0)) or ((3107 + 574)<=(71 + 62))) then for v230=(615 + 216) -(49 + 781),v92[(2640 -(650 + 220)) -(427 + 768 + 571)] do local v231=0 -0;local v232;local v233;while true do if ((v231==(0 -0)) or ((1513 -(271 + 109 + 6))>=(10 + (1920 -(217 + 533))))) then v232=0 + 0;v233=nil;v231=1 + (1607 -(271 + 1336));end if ((v231==(1 + 0)) or ((1813 -(1356 + 323))>=(14469 -10532))) then while true do if (((6320 -2885)==(4024 -(120 + 469))) and (v232==(0 + 0))) then local v265=445 -(418 + 27);while true do if (((3864 -(1168 + 516))==((10185 -6518) -(121 + 1366))) and ((1473 -(1083 + 390))==v265)) then v71=v71 + 1 + 0;v233=v84[v71];v265=408 -(368 + (597 -(9 + 549)));end if ((v265==(993 -(229 + 763))) or ((3661 -(13 + 115))<((1591 -889) + 524))) then v232=1958 -(949 + 1008);break;end end end if ((v232==(1 -0)) or ((2471 -(404 + 1587))>=(2801 -1607))) then if (((1086 + 3418)>(3581 -2435)) and (v233[1 -0]==(111 -(43 + 43)))) then v180[v230-(1 -0)]={v90,v233[9 -6]};else v180[v230-(1 + 0)]={v35,v233[1058 -(532 + 523)]};end v89[ #v89 + (1 -0)]=v180;break;end end break;end end end v90[v92[2 + 0]]=v28(v178,v179,v36);break;end if (((297 + 2853)<=(9438 -6072)) and ((743 -(451 + 104 + 187))==v177)) then local v221=0 + 0;while true do if ((v221==(0 + 0)) or ((2572 -(67 + 115))<(2225 -(16 + 146)))) then v180={};v179=v9({},{__index=function(v249,v250)local v254=0;local v255;local v256;local v257;while true do if (((4900 -(331 + 1559))>(99 + 36)) and (v254==(0 + 0 + 0))) then v255=0 -(0 -0);v256=nil;v254=1 + 0;end if (((11317 -6616)>(672 + 1023)) and (v254==1)) then v257=nil;while true do if (((10493 -5743)>3337) and (v255==(0 + (1609 -(221 + 1388))))) then local v284=0 + 0;while true do if (((14197 -10412)>(751 + 436)) and (v284==(0 + 0))) then v256=0 + 0;v257=nil;v284=4 -3;end if ((v284==(401 -(342 + 58))) or ((12168 -8170)>=(11440 -6641))) then v255=861 -(63 + 797);break;end end end if (((1906 -(46 + 177))<(5742 -(1185 + 380))) and (v255==1)) then while true do if ((v256==(0 + 0)) or ((3266 -1219)==((2175 -(1669 + 304)) + 13))) then local v289=1557 -(556 + 1001);local v290;while true do if ((v289==(0 + 0)) or ((4705 -(287 + 1464))==((18148 -12352) -(887 + 375)))) then v290=1292 -(682 + 610);while true do if (((0 + 0)==v290) or ((1724 -1176)>(1240 -(213 + 238)))) then local v308=0 -0;while true do if ((v308==(0 + 0)) or ((5443 -(845 + 834))<(2166 + 632))) then v257=v180[v250];return v257[2 -1][v257[1 + 1]];end end end end break;end end end end break;end end break;end end end,__newindex=function(v251,v252,v253)local v258=778 -(218 + 560);local v259;local v260;local v261;while true do if ((v258==(1 + (0 -0))) or ((1183 + 112)>=(4202 -(105 + 89)))) then v261=nil;while true do if ((((7015 -4601) -828)==(176 + 1410)) and (v259==(1557 -(132 + 1424)))) then while true do if ((v260==(0 + 0)) or ((26 + 24)>(2182 -((1244 -(148 + 338)) + 513)))) then v261=v180[v252];v261[1 + 0 + 0][v261[2 + 0]]=v253;break;end end break;end if (((0 -0)==v259) or ((7844 -3468)==(1433 + 2443))) then v260=0 + 0;v261=nil;v259=1 + 0;end end break;end if (((1205 + 163)==(2307 -939)) and (v258==(1788 -(357 + 1431)))) then v259=535 -((1950 -(1418 + 225)) + (512 -284));v260=nil;v258=2 -1;end end end});v221=1 + 0;end if (((10633 -7689)<(8970 -5869)) and (v221==(1 + 0))) then v177=2 -0;break;end end end end break;end if ((v176==(0 + 0)) or ((861 + (937 -(332 + 268)))<(1542 -(682 + 595)))) then v177=0 + 0;v178=nil;v176=1 + 0;end if ((v176==((7 -5) -(1 -0))) or ((994 + 1684)<=(1811 + 264))) then v179=nil;v180=nil;v176=(1857 -(1689 + 159)) -7;end end end elseif ((v93==((2146 -(1271 + 65)) -(412 + 373))) or ((1164 -471)>(2144 -(9 + 164)))) then v90[v92[1 + 1]]=v90[v92[4 -1]];else local v183=0 -0;local v184;local v185;local v186;while true do if ((v183==(1 + 0)) or ((5702 -(587 + 389))==(2584 -(105 + 408)))) then v186=nil;while true do if ((v184==(0 + 0)) or ((10490 -6283)<(625 + 505))) then local v222=0 -0;while true do if ((v222==(1755 -(1513 + 242))) or ((5628 -(414 + 953))<=(1524 -1168))) then v185=v92[1810 -(860 + 948)];v186={};v222=36 -(9 + 26);end if (((1 -0)==v222) or ((4167 -(1591 + 145))>=(2295 + 1085))) then v184=1 + 0;break;end end end if (((1 + 0 + 0)==v184) or ((3967 + 545)<=(726 + 255))) then for v234=1912 -(1517 + 394), #v89 do local v235=73 -(54 + 19);local v236;local v237;while true do if ((v235==(976 -((1723 -(673 + 93)) + 19))) or ((233 + 2647)==(6015 -(703 + 1290)))) then v236=28 -(7 + 21);v237=nil;v235=1 + 0;end if (((2616 -(1978 + 9))<=(1640 -(289 + 235))) and (v235==(536 -((510 -233) + 258)))) then while true do if (((1376 -(292 + (953 -385)))<((7262 -4795) -(364 + 142))) and (v236==(0 + 0 + 0))) then v237=v89[v234];for v268=0 + 0, #v237 do local v269=0 + 0;local v270;local v271;local v272;while true do if (((1494 + 1346)<=(5035 -(333 + 509))) and (v269==(1729 -(906 + 822)))) then v272=v270[1337 -(677 + 658)];if (((2751 + 810)>=(2661 -(406 + 919))) and (v271==v90) and (v272>=v185)) then local v288=0;while true do if ((2713<=(96 + 3674)) and (v288==(0 + 0 + 0))) then v186[v272]=v271[v272];v270[1 + 0]=v186;break;end end end break;end if ((v269==(0 + 0)) or (((1299 + 3448) -1153)==(633 + 762 + 710))) then local v286=169 -(134 + (686 -(297 + 354)));while true do if (((27 -(18 + 8))==v286) or ((4490 -(25 + 54))<=(266 + 138 + 1572))) then v269=1 + 0;break;end if ((v286==(102 -(5 + 97))) or ((2575 -(544 + 156))==(3103 -(78 + 11)))) then v270=v237[v268];v271=v270[(1426 -(903 + 520)) -2];v286=1954 -(57 + 1896);end end end end end break;end end break;end end end break;end end break;end if (((19782 -15459)>(1461 + 2273)) and (v183==(0 + 0))) then v184=0 -0;v185=nil;v183=1 + (0 -0);end end end v71=v71 + 1 + 0;break;end if (((162 + 70)<2825) and ((160 -(128 + 32))==v97)) then local v108=1932 -(68 + 1864);local v109;while true do if ((v108==(0 + (1043 -(56 + 987)))) or ((5881 -(1592 + 27))<=(3545 + 407))) then v109=(1594 -(560 + 1034)) -0;while true do if (((12313 -8161)==(6655 -2503)) and (v109==((2502 -(135 + 659)) -(1297 + 410)))) then v97=1169 -(254 + 914);break;end if ((v109==(1965 -(956 + 1009))) or ((5689 -((2013 -(1218 + 364)) + 439))<(5848 -(428 + 1013)))) then v92=v84[v71];v93=v92[4 -3];v109=1698 -(643 + 1054);end end break;end end end end break;end end end end;v70=3;end if (v70==0) then v71=1;v72= -1;v70=1;end if (3==v70) then A,B=v26(v10(v75));if  not A[1] then local v94=v34[4][v71] or "?";error("Script error at ["   .. v94   .. "]:"   .. A[2]);else return v12(A,2,B);end break;end end end;end return v28(v27(),{},v16)(...);end vv8(),...);end
