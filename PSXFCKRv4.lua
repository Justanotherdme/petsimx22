do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then local v62=0;while true do if (v62==0) then v18=v0(v3(v29,1,1));return "";end end else local v63=v2(v0(v29,16));if v18 then local v78=0;local v79;while true do if (v78==0) then v79=v5(v63,v18);v18=nil;v78=1;end if (v78==1) then return v79;end end else return v63;end end end);local function v19(v30,v31,v32)if v32 then local v64=(v30/((3 -1)^(v31-1)))%(((1362 -(1286 + 71)) -3)^(((v32-(405 -(100 + 304))) -(v31-(1 + 0 + 0))) + (580 -(208 + 371))));return v64-(v64%(1 + (1163 -(239 + 924))));else local v65=0 + 0;local v66;while true do if (v65==(0 -0)) then v66=(5 -(7 -4))^(v31-(780 -(403 + 376)));return (((v30%(v66 + v66))>=v66) and 1) or (178 -(65 + 113));end end end end local function v20()local v37=0 + 0;local v38;while true do if (v37==1) then return v38;end if (v37==(389 -(267 + (1094 -(121 + 851))))) then v38=v1(v15,v17,v17);v17=v17 + (22 -(20 + 1));v37=(1206 -(62 + 1143)) + 0;end end end local function v21()local v39,v40=v1(v15,v17,v17 + 2);v17=v17 + 1 + 1;return (v40 * (1594 -(418 + 920))) + v39;end local function v22()local v41,v42,v43,v44=v1(v15,v17,v17 + 3);v17=v17 + 1 + 3;return (v44 * (16777430 -(77 + 137))) + (v43 * (228386 -162850)) + (v42 * 256) + v41;end local function v23()local v45=v22();local v46=v22();return (( -((1960 -(405 + 259)) -(1134 + 160)) * v19(v46,10 + 22)) + 1 + 0) * ((264 -(160 + 102))^(v19(v46,56 -35,118 -87) -(379 + 644))) * ((((v19(v46,932 -(151 + 780),38 -18) * ((1 + 1 + 0)^(16 + 16))) + v45)/((1819 -(1510 + 307))^(2004 -(799 + 1153)))) + (534 -(501 + 32)));end local function v24(v33)local v47;if  not v33 then local v67=0;while true do if (v67==(0 + 0)) then v33=v22();if (v33==(836 -(769 + 67))) then return "";end break;end end end v47=v3(v15,v17,(v17 + v33) -(1 + 0));v17=v17 + v33;local v48={};for v60=1, #v47 do v48[v60]=v2(v1(v3(v47,v60,v60)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if (v49==(1 + 2)) then v56=nil;while true do local v80=0;local v81;while true do if (v80~=(1273 -(72 + 1201))) then else v81=0;while true do if (v81==(1 + 0)) then if (v50~=(1 + 1)) then else local v102=0;local v103;while true do if (v102~=0) then else v103=0 -0;while true do if (v103==1) then for v115=1,v22() do local v116=0;local v117;local v118;local v119;while true do if (v116~=(1414 -(1227 + 186))) then else v119=nil;while true do if (v117==0) then local v194=0;while true do if ((3 -2)~=v194) then else v117=1;break;end if (v194==(0 + 0)) then v118=0;v119=nil;v194=1;end end end if (v117==(4 -3)) then while true do if (v118~=(507 -(140 + 367))) then else v119=v20();if (v19(v119,1,1)==0) then local v208=0;local v209;local v210;local v211;local v212;local v213;while true do if ((1257 -(1169 + 87))==v208) then v211=nil;v212=nil;v208=2;end if (v208==(6 -4)) then v213=nil;while true do if (v209~=0) then else v210=0;v211=nil;v209=1 -0;end if ((958 -(882 + 74))==v209) then while true do if (v210~=(0 + 0)) then else local v275=0 -0;while true do if ((0 + 0)~=v275) then else local v293=0;while true do if (v293~=1) then else v275=3 -2;break;end if (v293~=0) then else local v299=0;while true do if (v299==(1859 -(1558 + 301))) then v211=v19(v119,254 -(213 + 39),3);v212=v19(v119,5 -1,6);v299=1;end if (v299==(1 + 0)) then v293=2 -1;break;end end end end end if (v275==(1 -0)) then v210=1 -0;break;end end end if (v210==(1 + 0)) then local v276=0;while true do if (0~=v276) then else local v294=0;while true do if (v294==(1 + 0)) then v276=702 -(279 + 422);break;end if (v294~=0) then else local v300=584 -(216 + 368);while true do if (v300~=(1064 -(148 + 916))) then else v213={v21(),v21(),nil,nil};if (v211==(0 + 0)) then local v305=216 -(14 + 202);local v306;local v307;while true do if (v305==1) then while true do if (v306==0) then v307=1828 -(754 + 1074);while true do if (v307==0) then v213[3]=v21();v213[983 -(248 + 731)]=v21();break;end end break;end end break;end if (v305==0) then local v319=0;while true do if (v319==0) then v306=0;v307=nil;v319=1229 -(971 + 257);end if (v319~=(1 + 0)) then else v305=1;break;end end end end elseif (v211==(1 + 0)) then v213[3]=v22();elseif (v211==2) then v213[1 + 2]=v22() -((8 -6)^16);elseif (v211==3) then local v321=0;local v322;while true do if (v321==(0 -0)) then v322=0;while true do if (v322==0) then v213[3]=v22() -(2^(1031 -(356 + 659)));v213[4]=v21();break;end end break;end end end v300=266 -(216 + 49);end if (v300~=(1010 -(692 + 317))) then else v294=1;break;end end end end end if ((1 + 0)==v276) then v210=1 + 1;break;end end end if (v210~=(1 + 2)) then else if (v19(v212,7 -4,3)==(1 + 0)) then v213[773 -(683 + 86)]=v56[v213[8 -4]];end v51[v115]=v213;break;end if (v210==(530 -(450 + 78))) then local v278=0;local v279;local v280;while true do if (0==v278) then v279=1110 -(564 + 546);v280=nil;v278=3 -2;end if (v278==(1517 -(94 + 1422))) then while true do if (v279==(0 -0)) then v280=1176 -(769 + 407);while true do if ((0 + 0)==v280) then if (v19(v212,3 -2,1)==(1 -0)) then v213[2]=v56[v213[1 + 1]];end if (v19(v212,5 -3,2)==1) then v213[3]=v56[v213[6 -3]];end v280=1;end if (v280~=1) then else v210=1 + 2;break;end end break;end end break;end end end end break;end if (v209==1) then v212=nil;v213=nil;v209=4 -2;end end break;end if ((0 -0)~=v208) then else v209=0;v210=nil;v208=1770 -(664 + 1105);end end end break;end end break;end end break;end if (v116==(564 -(111 + 453))) then v117=0 -0;v118=nil;v116=837 -(494 + 342);end end end v50=3 + 0;break;end if (v103==0) then local v113=0 -0;while true do if (v113~=(3 -2)) then else v103=2 -1;break;end if (v113==0) then for v121=1,v55 do local v122=0 -0;local v123;local v124;local v125;while true do if (v122==0) then v123=0;v124=nil;v122=1 + 0;end if (1==v122) then v125=nil;while true do if (v123~=0) then else local v203=0 -0;while true do if (v203==(1 + 0)) then v123=1 + 0;break;end if (v203~=0) then else v124=v20();v125=nil;v203=1;end end end if (v123~=(1 + 0)) then else if (v124==1) then v125=v20()~=(0 + 0);elseif (v124==2) then v125=v23();elseif (v124==3) then v125=v24();end v56[v121]=v125;break;end end break;end end end v54[8 -5]=v20();v113=1;end end end end break;end end end if (v50~=(8 -5)) then else local v104=0;while true do local v105=0 -0;while true do if (v105==(0 + 0)) then if (v104==0) then local v114=0 + 0;while true do if (v114==1) then v104=1 + 0;break;end if (v114~=(132 -(49 + 83))) then else for v126=1,v22() do v52[v126-(1 + 0)]=v27();end for v128=1,v22() do v53[v128]=v22();end v114=1;end end end if (v104~=(21 -(6 + 14))) then else return v54;end break;end end end end break;end if (v81==0) then local v97=0;while true do if (v97==(2 -1)) then v81=1;break;end if (v97==(0 -0)) then if (v50==(1 + 0)) then local v107=0;local v108;while true do if (v107==(0 + 0)) then v108=0;while true do if ((0 + 0)==v108) then v54={v51,v52,nil,v53};v55=v22();v108=3 -2;end if (v108==(1 + 0)) then v56={};v50=5 -3;break;end end break;end end end if (v50~=0) then else local v109=0 -0;local v110;while true do if (v109==(472 -(10 + 462))) then v110=543 -(244 + 299);while true do if (v110==(215 -(89 + 126))) then v51={};v52={};v110=1;end if (v110==1) then v53={};v50=1;break;end end break;end end end v97=1;end end end end break;end end end break;end if (2~=v49) then else local v74=0;while true do if (v74==(0 -0)) then v54=nil;v55=nil;v74=1;end if (v74==1) then v49=3 + 0;break;end end end if (v49~=0) then else local v75=0 -0;local v76;while true do if (v75~=(0 + 0)) then else v76=0;while true do if (v76==0) then v50=0;v51=nil;v76=1;end if (v76==1) then v49=1 + 0;break;end end break;end end end if ((3 -2)==v49) then local v77=0 -0;while true do if (v77==(1 + 0)) then v49=126 -(74 + 50);break;end if (v77==0) then v52=nil;v53=nil;v77=1680 -(774 + 905);end end end end end local function v28(v34,v35,v36)local v57=v34[1];local v58=v34[2];local v59=v34[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==3) then A,B=v26(v10(v73));if  not A[1] then local v82=0;local v83;while true do if (v82==0) then v83=v34[4][v69] or "?";error("Script error at ["   .. v83   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (v68==0) then v69=1;v70= -1;v68=1;end if (2==v68) then v73=nil;v73=function()local v84=v57;local v85=v58;local v86=v59;local v87=v26;local v88={};local v89={};local v90={};for v94=0 + 0 + 0,v72 do if (((2780 -(5 + 476))>=(212 + 439)) and (v94>=v86)) then v88[v94-v86]=v71[v94 + 1 + 0];else v90[v94]=v71[v94 + 1];end end local v91=(v72-v86) + (2 -(1 + 0));local v92;local v93;while true do local v95=0;local v96;while true do if (((1688 + (1564 -(34 + 639)))>(1488 -470)) and (v95==(360 -(42 + 318)))) then v96=(3710 -(417 + 1467)) -(191 + (2935 -(264 + 1036)));while true do if (((5223 -(498 + 4))>=(1926 -691)) and (v96==(0 -0))) then local v106=0 + 0 + 0;while true do if (((6325 -2348)>(386 + 137)) and (v106==(1642 -(1414 + 227)))) then v96=(2504 -(585 + 1245)) -(357 + 316);break;end if (((1544 -(292 + 344))<(20368 -16118)) and (v106==(0 + (0 -0)))) then v92=v84[v69];v93=v92[1 + 0];v106=1 + 0 + 0;end end end if (((944 + 3572)>=(5515 -(1459 + 429))) and ((2 -1)==v96)) then if (((696 + 3140)<=((7541 -3407) -(48 + 191))) and (v93<=(1 + 11))) then if ((v93<=5) or ((1628 + 2100)>((721 + 16290) -13174))) then if (((672 + 387)<=(1130 + 990)) and (v93<=(3 -1))) then if ((v93<=(1328 -(636 + 692))) or ((2220 + 1040)==(903 + 1776))) then v90[v92[7 -(2 + 3)]][v92[10 -7]]=v90[v92[5 -1]];elseif (((57 + (520 -(5 + 450)))==(262 -140)) and (v93>(1219 -(783 + 435)))) then if (((11103 -6305)==(17180 -12382)) and (v90[v92[3 -1]]==v92[4])) then v69=v69 + (2 -1);else v69=v92[5 -2];end else local v137=0 -0;local v138;local v139;local v140;local v141;local v142;local v143;while true do if ((v137==((111 -(107 + 1)) + 0)) or ((2628 -1216)>(701 + 1269))) then while true do if (((1692 + 2136)>(5179 -1594)) and (v138==(1 + 0))) then v141=nil;v142=nil;v138=1092 -(249 + 841);end if ((((262 -153) + 475)<4186) and (v138==(0 + 0))) then v139=(1734 -(391 + 1343)) + 0;v140=nil;v138=1 + 0;end if (((2896 -(207 + 154))>=(1777 -(479 + 1233))) and (v138==(6 -4))) then v143=nil;while true do if (((4776 -(184 + 1331))==(14225 -10964)) and (v139==(1 + 0))) then local v236=0 -0;local v237;while true do if (((0 + 0)==v236) or (((17583 -11176) -4333)>((8170 -(13 + 511)) -(2444 + 1591)))) then v237=(0 + 0) -0;while true do if (((1541 -(592 + 949))==v237) or ((3870 + 767)<(1880 -(552 + 60)))) then v70=(v142 + v140) -(3 -2);v143=394 -(216 + 178);v237=2 -1;end if ((v237==(1 + 0)) or ((1005 -309)>=(4919 -(1478 + 361)))) then v139=5 -3;break;end end break;end end end if (((5235 -(26 + 817))>=1992) and (v139==(469 -(409 + 58)))) then for v246=v140,v70 do local v247=0 + 0;local v248;while true do if (((10351 -7755)>(968 + 695)) and ((0 -0)==v247)) then v248=0 + 0;while true do if ((v248==(693 -(646 + 47))) or ((1652 + 232)==2154)) then v143=v143 + (4 -3);v90[v246]=v141[v143];break;end end break;end end end break;end if ((v139==(1890 -(599 + 1291))) or ((16 + 397)>(5186 -((917 -(239 + 129)) + 139)))) then local v238=(800 + 166) -(757 + 209);while true do if ((v238==((1006 -(39 + 967)) -0)) or ((65 + (330 -235))>(3865 -2831))) then v140=v92[1 + 1];v141,v142=v87(v90[v140](v12(v90,v140 + 1 + 0,v92[1387 -(236 + 1148)])));v238=1936 -(1263 + 672);end if ((v238==(3 -2)) or ((2280 -(305 + 563))==(2710 -1755))) then v139=1 + 0;break;end end end end break;end end break;end if (((4295 -(107 + 492))>=(3491 -2083)) and (v137==(3 -1))) then v142=nil;v143=nil;v137=10 -7;end if ((v137==(0 -0)) or ((1803 -851)>=(5515 -(439 + 355)))) then v138=0 + (1445 -(110 + 1335));v139=nil;v137=3 -2;end if ((v137==(3 -2)) or ((16 + 174)>=(3709 -(66 + (10 -7))))) then v140=nil;v141=nil;v137=1 + 1;end end end elseif ((v93<=(7 -4)) or ((2695 -((602 -223) + 1141))>=(2835 + 1446))) then do return;end elseif (((512 + 1638)==(2771 -(40 + 581))) and (v93==((1397 -(254 + 1140)) + 1))) then local v144=745 -(343 + 402);local v145;local v146;local v147;while true do if (((3255 -2039)<(5550 -(2189 + 1161))) and (v144==(0 -0))) then local v197=0 -0;while true do if ((v197==(1 + 0)) or ((6951 -3104)<=(3541 -(1030 + 281)))) then v144=1 + (621 -(79 + 542));break;end if (((15 + 111 + 941)<((1458 -(364 + 85)) + 1512)) and (v197==(0 + 0))) then v145=0 -0;v146=nil;v197=2 -1;end end end if ((v144==(1 + 0)) or ((4742 -2976)==880)) then v147=nil;while true do if ((v145==(1430 -(1011 + 418))) or ((576 + 2687)<(1453 -(466 + 405)))) then for v228=1 + 0, #v89 do local v229=(1371 -(1036 + 335)) -0;local v230;while true do if (((3846 + 388)>=(646 + 743)) and (v229==(0 + 0))) then v230=v89[v228];for v256=0 -0, #v230 do local v257=0 -0;local v258;local v259;local v260;local v261;local v262;while true do if (((4574 + 417)>(3795 -2167)) and (v257==0)) then v258=(803 -(94 + 709)) -0;v259=nil;v257=1 + 0;end if ((1946==((2657 + 2094) -2805)) and (v257==(1 + 0))) then v260=nil;v261=nil;v257=(1922 -(622 + 378)) -(541 + 379);end if ((v257==(2 -0)) or ((7067 -5190)<(497 + 399))) then v262=nil;while true do if (((0 -(0 + 0))==v258) or ((2166 + 1020)>=(6907 -((1660 -(259 + 147)) + 704)))) then local v288=0 + 0;while true do if ((v288==(0 + 0)) or ((16565 -12132)<(2884 + 851))) then v259=1137 -(837 + 300);v260=nil;v288=1 -0;end if ((v288==(1 + 0 + 0)) or ((181 + 2274)<=(2448 -1744))) then v258=1;break;end end end if ((v258==(1499 -(162 + 1335))) or ((4516 -(1278 + 327))<=(3081 -1381))) then while true do if (((3136 + 311)<(8688 -4457)) and (v259==(0 -0))) then local v295=0 + 0;while true do if ((v295==(1265 -(69 + 1196))) or ((2204 + 2047)<=(4359 -2538))) then local v303=0 -0;while true do if ((v303==(0 -0)) or ((5737 -(1217 + 288))==(10167 -6502))) then v260=v230[v256];v261=v260[1 -(1499 -(1466 + 33))];v303=1;end if (((1 -0)==v303) or ((679 + (2168 -(856 + 312)))>=(2890 -(38 + 1152)))) then v295=1 + 0;break;end end end if ((v295==(1 + (0 -0))) or (1783>=((642 -(65 + 157)) + 3583))) then v259=1 + 0 + 0;break;end end end if (((1 + 0)==v259) or ((40 + 2643)==(3274 -(1032 + 42)))) then v262=v260[5 -3];if (((v261==v90) and (v262>=v146)) or ((4306 -(674 + 376))>(5952 -(995 + 607)))) then local v301=0 -0;local v302;while true do if (((6175 -(1464 + 325))>(376 + (913 -(493 + 371)))) and (v301==(0 -0))) then v302=396 -(178 + 218);while true do if ((4731==4731) and (v302==(0 + 0))) then v147[v262]=v261[v262];v260[1 + 0]=v147;break;end end break;end end end break;end end break;end if ((((26121 -13669) -9566)<((17164 -12665) -(1031 + 36))) and (v258==(1 + 0))) then local v289=0 + 0;while true do if (((1136 + 1138)<((19214 -15090) -((3466 -(1178 + 621)) + 21))) and (v289==(1 + 0))) then v258=2 + 0 + 0;break;end if ((v289==(0 + 0)) or ((864 + 3274)<(1264 + 952))) then v261=nil;v262=nil;v289=1 + 0;end end end end break;end end end break;end end end break;end if (((23 + 2054)==(2197 -(45 + 75))) and ((257 -(28 + 229))==v145)) then local v214=1367 -((1607 -985) + 745);while true do if ((v214==(1 + 0 + 0)) or ((1974 -(48 + (228 -124)))==(8021 -(2698 + 1672)))) then v145=2 -1;break;end if ((((3034 -(464 + 1474)) + 1713)<=(3612 -(528 + 29 + 47))) and (v214==(395 -(200 + 195)))) then local v239=0 -0;while true do if ((v239==(0 + 0)) or ((493 + 858)>=(1005 + 939))) then v146=v92[(1494 + 343) -(1634 + 201)];v147={};v239=(4 -3) + 0;end if ((v239==(1315 -(1031 + 283))) or ((2669 + 1102)==(626 + 3923))) then v214=495 -((1964 -(1309 + 296)) + 135);break;end end end end end end break;end end else v90[v92[699 -(261 + 436)]][v92[4 -1]]=v92[1793 -((4274 -2567) + 82)];end elseif ((v93<=(761 -(659 + 94))) or (1553>(12840 -10168))) then if ((((3168 -2212) + 1857)==(5237 -2424)) and (v93<=(9 -(1 + 2)))) then v90[v92[(1237 -(1045 + 191)) + 1]]=v92[3 + 0];elseif ((v93>(15 -8)) or ((3476 -2131)==(2377 + 77))) then local v150=0 -0;local v151;local v152;local v153;while true do if ((v150==(0 + (1371 -(29 + 1342)))) or (((7677 -5321) + 126)<(60 + (949 -(416 + 211))))) then local v198=1172 -((1223 -(491 + 643)) + 1083);while true do if ((v198==(0 + 0)) or ((832 + 2320)<(3658 -(890 + 699)))) then v151=709 -(222 + 487);v152=nil;v198=194 -(96 + 97);end if (((2237 + 670)>(122 + 822)) and (v198==(1284 -(158 + 1125)))) then v150=1;break;end end end if (((2436 + 795)==(148 + (3720 -(372 + 265)))) and (v150==(1 -0))) then v153=nil;while true do if (((3844 -(51 + 18))<=(2605 + 2298)) and (((1316 -(139 + 1176)) -0)==v151)) then v90[v152 + (1 -0)]=v153;v90[v152]=v153[v92[4 + (0 -0)]];break;end if ((v151==(574 -(109 + 465))) or ((1243 + 373)<(428 + 281))) then local v218=271 -(37 + 234);while true do if (((916 -(453 + 362))<((10413 -5076) -(373 + (1052 -696)))) and (v218==(202 -(8 + 194)))) then v152=v92[1 + 1];v153=v90[v92[2 + 1]];v218=1419 -(665 + 753);end if (((4472 -3316)<=(5017 -(1384 + 114))) and (v218==(1 + 0 + 0))) then v151=2 -1;break;end end end end break;end end else v90[v92[9 -7]]={};end elseif (((3955 -((2657 -(541 + 590)) + 468))<(4537 -1473)) and (v93<=(17 -7))) then if ((4422>=(8961 -4603)) and (v93==(2 + 3 + 4))) then local v155=0 + 0;local v156;local v157;while true do if (((9781 -6721)<(2189 + 2309)) and ((0 -0)==v155)) then v156=0 + 0;v157=nil;v155=1 + (0 -0);end if (((2624 -(479 + 801))<=(3821 + 29)) and (v155==(652 -(455 + 196)))) then while true do if (((4861 -(419 + 1044))<(10353 -5796)) and (v156==(1193 -(684 + 509)))) then v157=v92[1 + 0 + 1];v90[v157](v12(v90,v157 + (127 -(35 + 91)),v92[4 -1]));break;end end break;end end else local v158=0 -0;local v159;local v160;local v161;local v162;while true do if ((v158==(0 + 0 + 0)) or ((1178 + 129)>(2982 -(85 + 580)))) then v159=1659 -(807 + 852);v160=nil;v158=1057 -(776 + 280);end if ((v158==(3 -2)) or ((7375 -(1280 + 4391))<(1806 -(1473 -(234 + 42))))) then v161=nil;v162=nil;v158=6 -4;end if ((v158==((3 -2) + 1)) or ((4772 -((1769 -(1758 + 2)) + 1))<(2894 -978))) then while true do if ((v159==(1 + 0)) or ((3283 -(697 + 455))>=(4107 -(77 + 710)))) then local v220=0 + 0;while true do if ((4398==(4986 -(518 + 70))) and ((1 + 0)==v220)) then v159=1673 -((2228 -(444 + 364)) + 251);break;end if (((5586 -(93 + 1042))>(5073 -(890 + 74))) and (v220==0)) then v162={};v161=v9({},{__index=function(v250,v251)local v263=1849 -(1678 + 53 + 118);local v264;local v265;while true do if ((v263==(32 -(23 + 9))) or ((326 + 209 + 27)==1449)) then local v274=186 -(44 + 142);while true do if ((((12859 -(326 + 1565)) -8665)<(8751 -3837)) and (v274==(0 -0))) then v264=(0 -0) -0;v265=nil;v274=4 -3;end if (((1522 -(1079 + 442))==v274) or ((1217 + 787)>(862 + 1297))) then v263=1;break;end end end if (((1468 + 2752)<=(4989 -(317 + 207))) and (v263==(1 -0))) then while true do if (((3130 + 256)==(4690 -(40 + 1264))) and ((0 -0)==v264)) then local v290=0 -0;local v291;while true do if (((712 -(23 + 8 + 58))<(1365 -(240 + 339))) and (v290==((0 -0) -0))) then v291=22 -(21 + 1);while true do if (((89 + 180 + 258)<(8601 -4853)) and ((0 + 0)==v291)) then local v304=0 -0;while true do if (((245 + 17)<=(2278 -(1339 + 142))) and ((0 -0)==v304)) then v265=v162[v251];return v265[(287 + 635) -(51 + 21 + (1376 -(472 + 55)))][v265[1 + 1]];end end end end break;end end end end break;end end end,__newindex=function(v252,v253,v254)local v266=0 -(0 + 0);local v267;local v268;local v269;while true do if (((10959 -7551)<=(13099 -9412)) and (v266==(1 + 0))) then v269=nil;while true do if ((v267==0) or ((4723 -(116 + 74 + 124))==(5303 -(1366 + 560)))) then local v292=0 + 0;while true do if (((4825 -(178 + 428))>((1678 -(268 + 1292)) + 1779)) and (v292==(1 + 0))) then v267=1 + 0;break;end if (((177 + 3959)>((3346 -1503) + 1413)) and (v292==(0 + 0))) then v268=0 -0;v269=nil;v292=1 + 0;end end end if ((977<((4255 -(193 + 498)) -1881)) and (v267==(1 + 0))) then while true do if ((231<(2619 + 2067)) and (v268==(1435 -(659 + 776)))) then v269=v162[v253];v269[952 -(931 + 20)][v269[280 -(271 + 7)]]=v254;break;end end break;end end break;end if (((1523 -(39 + 343))==(63 + 1078)) and (v266==(211 -((640 -457) + (123 -(78 + 17)))))) then v267=1748 -(808 + 161 + 779);v268=nil;v266=147 -(64 + 82);end end end});v220=1080 -(550 + 529);end end end if (((4367 + 268)>=(755 -(35 + 6))) and (v159==(0 + 0))) then v160=v85[v92[701 -(639 + 59)]];v161=nil;v159=2 -(1269 -(71 + 1197));end if ((v159==(6 -4)) or (((25826 -13875) -8794)>=(4071 -(16 + 43)))) then for v231=1 + 0,v92[1822 -((776 -566) + 1608)] do local v232=93 -(17 + 41 + 35);local v233;local v234;while true do if ((v232==(2 -1)) or ((4221 + 692)<=(70 + 693))) then while true do if ((v233==(1293 -(1222 + 4 + 66))) or ((3435 -(159 + 451))<953)) then if ((v234[3 -(984 -(739 + 243))]==(56 -40)) or ((1641 -(866 + 554))>=(1420 -789))) then v162[v231-((1258 + 701) -(668 + 1290))]={v90,v234[(6 + 2) -5]};else v162[v231-((753 + 92) -(79 + 765))]={v35,v234[5 -2]};end v89[ #v89 + (1233 -(686 + 546))]=v162;break;end if (((177 + 4418)>=(3119 -(80 + 385))) and (v233==(0 -0))) then local v273=0 -0;while true do if ((v273==(1470 -(1128 + 342))) or ((6039 -(454 + 798))<(2456 -(431 + (2172 -(501 + 695)))))) then v69=v69 + (1575 -(897 + 677));v234=v84[v69];v273=(1128 -(360 + 347)) -(305 + 65 + 50);end if ((v273==(1397 -(1318 + 78))) or ((9664 -5292)<(3497 -(502 + 182)))) then v233=828 -(234 + 593);break;end end end end break;end if (((630 + 1976)<(8855 -4855)) and (v232==(0 -0))) then local v255=0 + 0;while true do if ((v255==(2 -1)) or ((412 + 353)<(1061 -645))) then v232=557 -(190 + 366);break;end if ((v255==(0 + 0)) or ((8395 -6024)==(4254 -(532 + 25)))) then v233=(38 + 1007) -(666 + 379);v234=nil;v255=1 -0;end end end end end v90[v92[122 -(119 + 1)]]=v28(v160,v161,v36);break;end end break;end end end elseif ((3558>(1729 -(622 + 739))) and (v93>11)) then v36[v92[1395 -(1237 + 155)]]=v90[v92[515 -(390 + 123)]];elseif ((v92[6 -4]==v90[v92[241 -(208 + 29)]]) or ((2522 + 611)==(865 + (1185 -648)))) then v69=v69 + (4 -3);else v69=v92[7 -4];end elseif ((((1064 -(730 + 92)) + 522)==(1348 -(542 + 42))) and (v93<=(12 + 7))) then if ((v93<=(1953 -((1744 -740) + 934))) or ((1719 + 2756)<(3233 + 774))) then if (((3667 -1500)<=(4023 -(881 + 72))) and (v93<=13)) then v90[v92[(75 + 89) -(129 + 33)]]=v92[4 -1]~=((0 -0) -0);elseif (((2870 + 1299)>(4824 -2649)) and (v93>(36 -22))) then v69=v92[821 -(85 + 733)];else local v166=656 -(373 + 283);local v167;local v168;local v169;while true do if ((v166==(0 + 0)) or ((4462 -(782 + 118))==(3211 + 671))) then v167=1431 -(115 + 1316);v168=nil;v166=1369 -(866 + 502);end if ((v166==((2417 -(108 + 1116)) -(215 + 977))) or ((3976 + 620)<(1243 + 2679))) then v169=nil;while true do if ((v167==(1226 -(1093 + 132))) or ((1309 -636)>(4196 -1488))) then for v235=v168 + (2 -1),v92[2 + 1] do v7(v169,v90[v235]);end break;end if ((v167==((0 + 0) -0)) or ((12062 -9360)<(505 + 701))) then v168=v92[(4 -3) + 1 + 0];v169=v90[v168];v167=552 -(488 + 63);end end break;end end end elseif ((v93<=(16 + 1)) or (((516 + 1143) -1057)>(4159 + 539))) then if (((1481 + 1882)>=((3240 -787) -(925 + 775))) and (v93==16)) then v90[v92[600 -(505 + 93)]]=v90[v92[456 -(159 + 294)]];else local v172=0;local v173;local v174;local v175;while true do if (((4287 -(1481 + 224))<(4593 -1570)) and (v172==1)) then v175=nil;while true do if ((2791>=(4241 -1628)) and (v173==(2 -1))) then while true do if (((1286 + 548 + 2606)>(1566 + 2319)) and ((0 -0)==v174)) then v175=v92[3 -1];v90[v175]=v90[v175](v12(v90,v175 + (1373 -(399 + (2834 -(400 + 1461)))),v92[1 + 2]));break;end end break;end if ((v173==(0 + 0 + 0)) or ((1092 + 303)==((3162 -2036) -(344 + 241)))) then v174=0 -0;v175=nil;v173=3 -2;end end break;end if (((2218 -1127)<=(2006 + 144)) and ((538 -(410 + 128))==v172)) then v173=0 -0;v174=nil;v172=2 -1;end end end elseif (((65 -36)==(68 -39)) and (v93==(18 + 0))) then local v176=1176 -((1820 -(1305 + 363)) + 1024);local v177;while true do if (((1368 -612)<(5589 -(831 + 832))) and (v176==(0 -(0 -0)))) then v177=v92[728 -(343 + 383)];v90[v177](v90[v177 + (655 -(405 + (563 -314)))]);break;end end else local v178=0 -0;local v179;local v180;local v181;while true do if (((19367 -14999)==(3468 + 900)) and (v178==(0 -0))) then v179=v92[7 -5];v180=v90[v179];v178=1952 -(998 + 953);end if (((1388 -(377 + 1010))==v178) or ((2474 + 610)<(2959 -(223 + 1612)))) then v181=v92[1 + 2];for v205=2 -1,v181 do v180[v205]=v90[v179 + v205];end break;end end end elseif ((((19 + 63) -37)<(697 -(499 + 94))) and (v93<=(1953 -(381 + 1550)))) then if ((v93<=(66 -46)) or ((2076 + 401)>=(3179 -(376 + 248)))) then for v135=v92[1180 -(53 + 1125)],v92[3 + 0 + 0] do v90[v135]=nil;end elseif ((v93==(708 -((1451 -856) + 92))) or ((5740 -3480)<=(130 -65))) then local v182=0 + 0;local v183;local v184;while true do if (((1 + 0)==v182) or ((4416 -(1904 + 93))<1473)) then while true do if (((320 + 492)<=(3815 -(1222 + 526))) and (v183==(0 -0))) then v184=v92[(1896 -(1248 + 645)) -1];v90[v184]=v90[v184](v12(v90,v184 + (3 -(1033 -(656 + 375))),v70));break;end end break;end if ((v182==(0 + 0)) or ((3922 -1511)<(6515 -4781))) then v183=0 -0;v184=nil;v182=1;end end else v90[v92[1638 -(14 + (3460 -(983 + 855)))]]=v28(v85[v92[1963 -(1482 + 478)]],nil,v36);end elseif (((5058 -((1867 -(374 + 1294)) + 16))>=((4381 -(457 + 511)) -(259 + (67 -31)))) and (v93<=(35 -11))) then if (((1007 + 101)==(4083 -2975)) and (v93==23)) then v90[v92[189 -(33 + 154)]]();else local v186=(965 -(334 + 631)) -0;local v187;local v188;local v189;while true do if ((v186==(2 -1)) or ((1948 -(2589 -(675 + 1127)))==(7652 -3000))) then v189=nil;while true do if (((1416 -(871 + 66))<=((6267 + 611) -2594)) and (v187==(1088 -(656 + 431)))) then while true do if ((v188==(0 -0)) or ((780 -260)>=(2585 -(1273 + 283)))) then v189=v92[4 -2];v90[v189]=v90[v189]();break;end end break;end if ((v187==(1817 -(1729 + (253 -165)))) or ((5679 -(42 + 995))<=(1541 + 1415))) then local v227=0 -0;while true do if ((v227==(0 -(0 + 0))) or ((101 + 33)>(128 + 2934))) then v188=0 + 0 + 0;v189=nil;v227=3 -2;end if ((v227==1) or ((3056 -(264 + 18))>(11409 -(7945 -(458 + 277))))) then v187=1 + 0 + 0;break;end end end end break;end if ((v186==((129 + 8) -(114 + 23))) or ((4316 -(132 + 125))<=((5716 -4199) -(220 + 121)))) then v187=1089 -(654 + 435);v188=nil;v186=1 -0;end end end elseif ((v93==(91 -66)) or ((671 -338)>2777)) then v90[v92[373 -(192 + 179)]]=v35[v92[(4 + 3) -4]];else v90[v92[(76 + 352) -(89 + 337)]]=v36[v92[(222 -(202 + 9)) -(17 -9)]];end v69=v69 + 1 + 0;break;end end break;end end end end;v68=3;end if (v68==1) then v71={...};v72=v11("#",...) -1;v68=2;end end end;end return v28(v27(),{},v16)(...);end vv8(),...);end
