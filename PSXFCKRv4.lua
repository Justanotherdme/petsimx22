do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v37)if (v2(v37,2)==79) then v26=v1(v4(v37,1,1));return "";else local v71=v3(v1(v37,16));if v26 then local v80=v6(v71,v26);v26=nil;return v80;else return v71;end end end);local function v27(v38,v39,v40)if v40 then local v72=(v38/((1 + 1)^(v39-(3 -(2 + 0)))))%(((603 -(354 + 243)) -4)^(((v40-(1 -0)) -(v39-(1 -0))) + (1694 -(113 + 1580))));return v72-(v72%(1392 -(1211 + 180)));else local v73=0 + (1828 -(1694 + 134));local v74;while true do if (v73==(696 -(209 + 487))) then v74=(1 + 1)^(v39-(2 -1));return (((v38%(v74 + v74))>=v74) and (1908 -(619 + 1288))) or 0;end end end end local function v28()local v45=0 -0;local v46;while true do if (v45==(0 -0)) then v46=v2(v23,v25,v25);v25=v25 + (1355 -(316 + 1038));v45=(2 -1) + 0;end if (v45==(1027 -(1003 + 2 + 21))) then return v46;end end end local function v29()local v47,v48=v2(v23,v25,v25 + 2 + 0);v25=v25 + 1 + 1;return (v48 * (1017 -(107 + 654))) + v47;end local function v30()local v49=0 -0;local v50;local v51;local v52;local v53;while true do if ((1745 -(1254 + (1937 -(182 + 1265))))==v49) then return (v53 * (16778580 -(74 + 1290))) + (v52 * 65536) + (v51 * (38 + 218)) + v50;end if ((0 + 0)==v49) then v50,v51,v52,v53=v2(v23,v25,v25 + (419 -(357 + 59)));v25=v25 + 4;v49=1;end end end local function v31()local v54=v30();local v55=v30();return (( -((1272 -(571 + 699)) + 0) * v27(v55,13 + 19)) + (1958 -(557 + 1400))) * (((2005 -(1201 + 795)) -(5 + 2))^(v27(v55,17 + 4,109 -78) -1023)) * ((((v27(v55,1063 -(1016 + 46),20 + 0) * (2^(72 -40))) + v54)/(2^(169 -117))) + 1 + 0);end local function v32(v41)local v56=1428 -(1209 + 219);local v57;local v58;while true do if (v56==(0 -0)) then v57=nil;if  not v41 then v41=v30();if (v41==(0 -0)) then return "";end end v56=1;end if (v56==(1096 -(731 + 363))) then v58={};for v81=(1206 + 134) -(1162 + 177), #v57 do v58[v81]=v3(v2(v4(v57,v81,v81)));end v56=1918 -((3268 -(178 + 1731)) + 556);end if (v56==(1 + 0)) then v57=v4(v23,v25,(v25 + v41) -(1 + 0));v25=v25 + v41;v56=2;end if (v56==(10 -7)) then return v7(v58);end end end local v33=v30;local function v34(...)return {...},v12("#",...);end local function v35()local v59=0 + 0;local v60;local v61;local v62;local v63;local v64;local v65;local v66;local v67;while true do if (v59==3) then v66=nil;v67=nil;v59=1 + 3;end if (v59~=1) then else v62=nil;v63=nil;v59=2 + 0;end if (v59~=(1 + 3)) then else while true do if (v60~=(6 -4)) then else v65=nil;v66=nil;v60=9 -6;end if (v60==(0 -0)) then v61=0;v62=nil;v60=347 -(297 + 49);end if (v60==(12 -9)) then v67=nil;while true do local v99=1611 -(1348 + 263);while true do if (v99==(514 -(466 + 47))) then if (v61==2) then local v106=563 -(521 + 42);while true do if (v106==(1 + 0)) then for v111=1 + 0,v30() do v64[v111]=v30();end return v65;end if (v106==(678 -(203 + 475))) then for v113=1,v30() do local v114=0 -0;local v115;local v116;local v117;while true do if (v114~=(0 -0)) then else v115=0;v116=nil;v114=493 -(487 + 5);end if (v114==(1 + 0)) then v117=nil;while true do if (v115==(604 -(566 + 37))) then while true do if (v116~=(0 -0)) then else v117=v28();if (v27(v117,1,1 + 0)==(0 -0)) then local v225=0;local v226;local v227;local v228;while true do if (v225~=(0 -0)) then else local v246=0;while true do if (v246==(18 -(15 + 2))) then v225=3 -2;break;end if (v246==(0 + 0)) then local v265=0 -0;while true do if (v265~=(1 -0)) then else v246=1;break;end if (0~=v265) then else v226=v27(v117,4 -2,3);v227=v27(v117,89 -(61 + 24),13 -7);v265=1;end end end end end if ((69 -(13 + 53))~=v225) then else if (v27(v227,8 -5,3)~=(1 + 0)) then else v228[3 + 1]=v67[v228[4]];end v62[v113]=v228;break;end if (2==v225) then if (v27(v227,1055 -(944 + 110),1 -0)==(1739 -(1037 + 701))) then v228[2]=v67[v228[2]];end if (v27(v227,2,1 + 1)~=(1816 -(544 + 1271))) then else v228[3 + 0]=v67[v228[3]];end v225=1 + 2;end if (v225==(1 + 0)) then local v248=0 -0;local v249;while true do if (v248==(700 -(193 + 507))) then v249=0;while true do if (v249~=(1 + 0)) then else v225=698 -(300 + 396);break;end if (v249==(1380 -(1104 + 276))) then v228={v29(),v29(),nil,nil};if (v226==(268 -(9 + 259))) then local v281=673 -(542 + 131);while true do if (v281~=(712 -(457 + 255))) then else v228[3 + 0]=v29();v228[2 + 2]=v29();break;end end elseif (v226==1) then v228[3]=v30();elseif (v226==(6 -4)) then v228[3]=v30() -((1795 -(102 + 1691))^(308 -(192 + 100)));elseif (v226==(185 -(83 + 99))) then local v291=311 -(47 + 264);local v292;local v293;while true do if (v291==(0 -0)) then v292=0 -0;v293=nil;v291=1 + 0;end if (v291==1) then while true do if (v292==(0 -0)) then v293=0 -0;while true do if (v293~=0) then else v228[2 + 1]=v30() -(2^16);v228[4]=v29();break;end end break;end end break;end end end v249=1 -0;end end break;end end end end end break;end end break;end if (v115~=0) then else v116=0 + 0;v117=nil;v115=533 -(274 + 258);end end break;end end end for v118=3 -2,v30() do v63[v118-(1 + 0)]=v35();end v106=1;end end end break;end if (v99~=(0 + 0)) then else if (v61~=(0 + 0)) then else local v107=157 -(140 + 17);while true do if (v107~=(0 -0)) then else v62={};v63={};v107=280 -(118 + 161);end if ((1729 -(632 + 1096))==v107) then local v110=0 + 0;while true do if (v110~=0) then else v64={};v65={v62,v63,nil,v64};v110=1 + 0;end if (v110==(168 -(69 + 98))) then v107=3 -1;break;end end end if (v107==2) then v61=1 + 0;break;end end end if (v61~=(4 -3)) then else local v108=1078 -(1063 + 15);local v109;while true do if (v108==0) then v109=0 + 0;while true do if (v109==(4 -3)) then for v123=1914 -(516 + 1397),v66 do local v124=1708 -(1636 + 72);local v125;local v126;local v127;while true do if (v124==(1 -0)) then v127=nil;while true do if (v125==(1 + 0)) then if (v126==(1 + 0)) then v127=v28()~=(0 -0);elseif (v126==(1 + 1)) then v127=v31();elseif (v126==(7 -4)) then v127=v32();end v67[v123]=v127;break;end if (v125==(0 + 0)) then local v204=0 + 0;while true do if (v204~=(0 + 0)) then else v126=v28();v127=nil;v204=1;end if (v204==(61 -(38 + 22))) then v125=1 + 0;break;end end end end break;end if (v124==(398 -(229 + 169))) then v125=766 -(760 + 6);v126=nil;v124=2 -1;end end end v65[3 + 0]=v28();v109=296 -(289 + 5);end if (v109==(1292 -(339 + 953))) then local v122=0 + 0;while true do if (v122==0) then v66=v30();v67={};v122=1;end if ((1 + 0)==v122) then v109=1 -0;break;end end end if (v109==2) then v61=179 -(99 + 78);break;end end break;end end end v99=1;end end end break;end if (v60==1) then local v98=0;while true do if (v98~=(1 + 0)) then else v60=2 + 0;break;end if (v98~=(0 -0)) then else v63=nil;v64=nil;v98=1 + 0;end end end end break;end if (v59==(0 -0)) then v60=0;v61=nil;v59=3 -2;end if (2==v59) then v64=nil;v65=nil;v59=2 + 1;end end end local function v36(v42,v43,v44)local v68=v42[1];local v69=v42[2];local v70=v42[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v83=v68;local v84=v69;local v85=v70;local v86=v34;local v87={};local v88={};local v89={};for v95=0 -0,v78 do if ((v95>=v85) or ((8230 -5347)>=(5097 -(97 + 10 + 33)))) then v87[v95-v85]=v77[v95 + (4 -3)];else v89[v95]=v77[v95 + (281 -(261 + 19))];end end local v90=(v78-v85) + (4 -3);local v91;local v92;while true do local v96=663 -(606 + 57);local v97;while true do if (((3047 + 510)>(4399 -(41 + 1144))) and (v96==(0 -0))) then v97=0;while true do if ((v97==(0 + 0)) or ((943 + 1494)<=(2708 -(49 + 1898)))) then local v104=0 + 0;local v105;while true do if ((v104==(0 + 0 + 0)) or (565<(146 -67))) then v105=(0 + 0) -0;while true do if ((v105==(0 + 0)) or ((5555 -(19 + 791))==((4667 -(902 + 580)) -(997 + 105)))) then local v120=0;while true do if ((v120==(435 -(419 + 16))) or ((3572 -(1521 + 323))==((3902 -(243 + 151)) -(825 + 548)))) then v91=v83[v75];v92=v91[3 -2];v120=1;end if ((v120==1) or ((2490 -(1564 + 214))>=(94 + 1278))) then v105=597 -(157 + 439);break;end end end if (((15143 -(10996 -(205 + 71)))>(9958 -7392)) and (v105==(1 + 0))) then v97=3 -2;break;end end break;end end end if ((v97==1) or (((671 -391) + 381)>((272 -162) + 1174 + 43))) then if ((v92<=(3 + 9)) or ((5626 -(1514 + (144 -26)))<(3749 -(1186 + 657)))) then if ((v92<=5) or ((4833 -(583 + 178))==(5943 -2885))) then if ((1894<3220) and (v92<=((4 -3) + 1))) then if (((2716 -(353 + 794))<3128) and (v92<=(904 -(451 + 453)))) then v89[v91[2 + 0]]=v91[3 + 0];elseif ((344<596) and (v92==1)) then v89[v91[5 -3]][v91[3 + 0]]=v91[11 -7];else v89[v91[750 -(571 + 177)]][v91[3]]=v89[v91[4 + 0]];end elseif ((v92<=(6 -3)) or ((4456 -(10 + 11 + 1440))>(5236 -(1103 + 33)))) then v89[v91[2 + 0]]=v36(v84[v91[12 -9]],nil,v44);elseif ((((529 -393) + 889)<=(8114 -5009)) and (v92==(642 -(578 + 60)))) then v89[v91[1 + 1]]=v43[v91[3]];else do return;end end elseif (((1661 -1065)<=(207 + 910)) and (v92<=8)) then if ((2375>=(2137 -(269 + (1857 -(726 + 81))))) and (v92<=(19 -(122 -(45 + 64))))) then local v131=0 -0;local v132;while true do if (((3991 + 97)==(951 + 3137)) and (v131==0)) then v132=v91[909 -(94 + 813)];v89[v132]=v89[v132](v13(v89,v132 + 1 + 0,v76));break;end end elseif (((4180 -2899)<(1623 + 1701)) and (v92==(2 + 5))) then local v148=(1475 -(902 + 573)) + (0 -0);local v149;while true do if ((v148==(461 -(178 + 283))) or ((472 + 2637)>(3726 + 182))) then v149=v91[2];v89[v149]=v89[v149](v13(v89,v149 + (3 -2),v91[3 + 0]));break;end end elseif ((v91[2 + 0]==v89[v91[4 + 0]]) or ((10436 -5650)<=2132)) then v75=v75 + ((3 -0) -(358 -(114 + 242)));else v75=v91[3];end elseif (((1466 + 2187)>=(348 + 356)) and (v92<=(6 + 4))) then if ((v92>(18 -9)) or ((9631 -6184)>4923)) then local v150=596 -(256 + 340);local v151;local v152;while true do if ((v150==(1 -(1348 -(741 + 607)))) or ((19 + 1202)>(3752 -(739 + (1136 -662))))) then v89[v151 + 1]=v152;v89[v151]=v152[v91[8 -4]];break;end if ((v150==((391 + 728) -(32 + 439 + 648))) or ((858 -(84 + 469 + 23))>=(5761 -((1490 -(377 + 8)) + 153)))) then local v199=0 -0;while true do if (((1891 -(206 + 1685))==v199) or ((405 + 60)>=(2099 + 328 + 415))) then v151=v91[430 -(245 + 183)];v152=v89[v91[5 -2]];v199=2 -1;end if ((2090<=(2056 + 2833)) and (1==v199)) then v150=784 -(447 + 336);break;end end end end else local v153=0 -0;local v154;local v155;local v156;local v157;while true do if (((14272 -10466)>(408 + (3188 -(949 + 889)))) and ((1797 -(667 + 1128))==v153)) then for v205=v154,v76 do local v206=0 + 0;local v207;while true do if ((v206==((1743 -(1528 + 215)) -0)) or (341>(4987 -3213))) then v207=0;while true do if ((v207==(0 -0)) or (((694 + 4543) -(188 + 351))<(2491 + 1663))) then v157=v157 + (2 -1);v89[v205]=v155[v157];break;end end break;end end end break;end if (((1679 -(751 + 257))<=(4580 -(499 + 135))) and ((830 -(100 + 730))==v153)) then v154=v91[2 -0];v155,v156=v86(v89[v154](v13(v89,v154 + (1487 -(1285 + 109 + 92)),v91[1 + 2])));v153=1;end if (((788 + 819)<(6703 -4024)) and (v153==1)) then local v201=0;while true do if ((v201==(0 -0)) or ((3635 -(1118 + (1901 -(1499 + 333))))<(5209 -3177))) then v76=(v156 + v154) -(1 + 0);v157=(954 -(813 + 141)) + 0;v201=394 -(116 + 277);end if (((1477 -1050)<=(2817 -(36 + 930))) and (v201==(1 -0))) then v153=4 -2;break;end end end end end elseif (((3317 -1225)==(1846 + 246)) and (v92==(54 -(2021 -(806 + 1172))))) then v89[v91[557 -(414 + 141)]]={};else v89[v91[(948 -(741 + 205)) -0]]=v44[v91[7 -4]];end elseif (((5596 -4421)==(5036 -3861)) and (v92<=19)) then if (((2982 -(354 + 462))==(2490 -(258 + 66))) and (v92<=15)) then if (((8022 -4258)<=4909) and (v92<=(32 -19))) then local v133=673 -(586 + 87);local v134;while true do if ((v133==0) or ((11200 -6782)<(8239 -4192))) then v134=v91[661 -(518 + 141)];v89[v134]=v89[v134]();break;end end elseif (((640 -(283 + 323))==(1404 -(297 + 1073))) and (v92==(23 -9))) then v75=v91[3 + 0];else v89[v91[4 -2]]=v91[8 -5]~=(0 + 0);end elseif (((2632 -(1232 + 583))==(263 + (658 -(24 + 80)))) and (v92<=((221 -(33 + 62)) -(54 + 48 + 7)))) then if ((v92>(323 -(47 + 260))) or ((3330 -(400 + 1184))>(549 + 2375))) then v44[v91[3]]=v89[v91[2]];else v89[v91[2]]();end elseif ((v92==(1249 -(133 + (2346 -1248)))) or ((10602 -7992)>=4533)) then for v190=v91[5 -3],v91[3] do v89[v190]=nil;end elseif (((7876 -4538)>(4650 -(136 + 542 + 773))) and (v89[v91[2 + 0]]==v91[4])) then v75=v75 + 1 + 0;else v75=v91[3];end elseif (((132 + 3326)>=((2320 -(327 + 101)) -1196)) and (v92<=(5 + 15 + 2))) then if ((v92<=20) or ((4113 -(329 + 128))<(22 + 1597))) then local v135=0 -0;local v136;local v137;local v138;local v139;while true do if ((1928<(4642 -(413 + 54))) and (v135==2)) then while true do if ((0==v136) or ((1931 + 124)<(337 -183))) then v137=v84[v91[171 -((1845 -(98 + 1725)) + 146)]];v138=nil;v136=1;end if (((38 + 2880)<(12479 -7736)) and (v136==((2227 -(119 + 348)) -(120 + 1638)))) then for v215=1 + 0,v91[1 + 3] do local v216=(1394 -(58 + 29)) -(595 + 712);local v217;local v218;local v219;while true do if ((v216==(4 -3)) or ((2564 -(329 + 704))>=(3852 -1498))) then v219=nil;while true do if ((v217==(1981 -(1741 + 239))) or ((18223 -14511)<=(127 -89))) then while true do if (((1600 -(1070 + 529))==v218) or (((6864 -(155 + 845)) -3029)<=1473)) then if ((v219[2 -1]==21) or (((954 + 1091) -(343 + 293))==(232 + (2875 -(543 + 298))))) then v139[v215-(1 -0)]={v89,v219[3]};else v139[v215-(2 -1)]={v43,v219[(1168 -(1009 + 156)) + 0]};end v88[ #v88 + (4 -3)]=v139;break;end if ((((35 -20) + 498)==(1898 -(136 + 1249))) and (v218==(0 -0))) then local v271=0 -0;while true do if ((4316>=1456) and (v271==(414 -(8 + 405)))) then v218=670 -(445 + 224);break;end if ((v271==(0 -0)) or ((492 + 400 + 1619)<1084)) then local v282=0 -0;while true do if (((2302 -(18 + 1399))<(782 + 386)) and (v282==(0 -0))) then v75=v75 + 1;v219=v83[v75];v282=1 -0;end if (((1178 -546)<=(2218 -(32 + 68))) and (v282==1)) then v271=3 -(1 + 1);break;end end end end end end break;end if ((v217==((1521 -(1334 + 187)) + 0)) or ((7634 -4616)<=(333 + 65))) then local v264=0 -0;while true do if ((v264==(2 -1)) or ((10 + 88 + 434)>=(1689 -(22 + 156)))) then v217=1 + 0;break;end if (((5260 -3739)>=(459 + 408)) and (v264==(0 -(191 -(67 + 124))))) then v218=0 -(458 -(66 + 392));v219=nil;v264=1 + 0;end end end end break;end if ((v216==(0 -0)) or ((2682 + 635)<=(2355 -(7 + 31 + 296)))) then v217=0 + 0;v218=nil;v216=1;end end end v89[v91[2 + 0]]=v36(v137,v138,v44);break;end if (((3 -2)==v136) or ((1356 + 654)<(6271 -4878))) then v139={};v138=v10({},{__index=function(v220,v221)local v231=0 -0;local v232;local v233;while true do if ((v231==(1 + 0)) or ((3522 + 1442)<=34)) then while true do if ((v232==(0 -0)) or ((14891 -11881)<=(328 -221))) then local v266=877 -(721 + (344 -(34 + 154)));while true do if ((3675>=(2553 -(107 + 16 + 13))) and (v266==((1019 -(353 + 359)) -(290 + 17)))) then v233=v139[v221];return v233[1][v233[60 -(33 + 25)]];end end end end break;end if (((0 + 0)==v231) or ((2214 -(421 + 1269))>=(4826 -(379 + 1156)))) then v232=0 + 0;v233=nil;v231=324 -(171 + 152);end end end,__newindex=function(v222,v223,v224)local v234=0 + 0;local v235;local v236;while true do if ((v234==(308 -(215 + 92))) or (3676==(1490 -(513 + 632)))) then while true do if ((((118 + 897) -(170 + (254 -89)))==(549 + 131)) and (v235==(0 + 0 + 0))) then v236=v139[v223];v236[2 -1][v236[1824 -(520 + 40 + 1262)]]=v224;break;end end break;end if ((3945>(3422 -1986)) and (v234==(0 + 0))) then v235=0 + 0;v236=nil;v234=1 + 0;end end end});v136=4 -2;end end break;end if ((3347==(5124 -(652 + 1125))) and (v135==1)) then v138=nil;v139=nil;v135=72 -(9 + 61);end if (((2197 -(999 + 132))<=4012) and (v135==(0 -0))) then v136=0 -0;v137=nil;v135=1;end end elseif ((v92>21) or ((1776 -(435 + 468))==(4075 + (1002 -329)))) then local v165=0;local v166;local v167;local v168;while true do if (((4675 -1102)>=(3055 -1051)) and (v165==1)) then v168=nil;while true do if ((3143>(328 -81)) and (0==v166)) then local v237=0;while true do if ((v237==(0 + 0)) or (4545==(2912 + (352 -(11 + 111))))) then v167=v91[3 -1];v168=v89[v167];v237=1147 -(1134 + 12);end if (((3696 + 652)>=(1650 -(114 + 11 + 391))) and (v237==(1 + 0))) then v166=1108 -((964 -(342 + 2)) + 487);break;end end end if (((4195 -(413 + 547))>=(3965 -(1078 + 243))) and (v166==(1511 -(780 + 730)))) then for v242=v167 + (2 -1),v91[2 + 1] do v8(v168,v89[v242]);end break;end end break;end if ((1051>(240 + 165)) and (v165==(0 + 0))) then v166=0 + 0 + 0;v167=nil;v165=2 -1;end end else v89[v91[76 -(56 + 18)]]=v89[v91[8 -5]];end elseif ((v92<=24) or ((5384 -(27 + 1586))==(5775 -(220 + 1633)))) then if ((v92==(108 -(55 + 30))) or ((292 + 1079)>=(1212 + 1266 + 267))) then local v171=0;local v172;local v173;local v174;local v175;while true do if (((1 + 1)==v171) or ((8523 -5879)>=((1898 -(27 + 1567)) + 4332))) then while true do if ((v172==(0 + 0)) or (1487>=(10132 -6090))) then local v238=0 -(957 -(612 + 345));while true do if (((3255 -(171 + 101 + 464))<(1373 + 2170)) and (v238==1)) then v172=1 + 0 + 0;break;end if (((4697 -2626)<(6981 -2170)) and ((0 + 0)==v238)) then v173=v91[255 -(13 + 240)];v174=v89[v173];v238=3 -2;end end end if (((717 + 2787)>2922) and (v172==1)) then v175=v91[3];for v243=2 -1,v175 do v174[v243]=v89[v173 + v243];end break;end end break;end if (((1883 -(266 + 1376))<=(2150 -882)) and (v171==(2 -1))) then v174=nil;v175=nil;v171=7 -(5 + 0);end if ((((2183 -(573 + 666)) + (4514 -(508 + 863)))>=(402 -(146 + 38 + 53))) and (v171==(0 -0))) then v172=0;v173=nil;v171=1;end end else local v176=0 + 0;local v177;local v178;while true do if (((16007 -12254)>=(477 + 253)) and (v176==1)) then while true do if (((0 + 0)==v177) or ((4157 -(520 + 239))<(1502 -1125))) then v178=v91[7 -5];v89[v178](v89[v178 + (1 -0)]);break;end end break;end if ((1980<2986) and (v176==(1963 -(437 + 1526)))) then v177=699 -(20 + 679);v178=nil;v176=1;end end end elseif ((v92==(6 + 0 + 19)) or ((3636 -(20 + 169))==((377 + 290) -382))) then local v179=0;local v180;local v181;while true do if ((v179==(0 + 0)) or ((65 + (4761 -2128))==(3450 -2602))) then local v202=0;while true do if ((v202==(0 + 0)) or (187>(15771 -11198))) then v180=v91[1367 -(420 + 945)];v181={};v202=1107 -(10 + 1096);end if ((v202==1) or ((300 + 27)==(1808 -(132 + (1781 -(184 + 694)))))) then v179=1 -0;break;end end end if (((17197 -12321)>1673) and (v179==((1 -0) + 0))) then for v210=1 + 0, #v88 do local v211=0 -0;local v212;local v213;local v214;while true do if ((v211==0) or ((1128 -(232 + 189))>=1087)) then v212=0;v213=nil;v211=1 + 0;end if (((7302 -(1848 + 2246))<=(6419 -(1526 + 463))) and (v211==((2158 -547) -((1437 -1000) + 657 + 516)))) then v214=nil;while true do if (((3942 -(237 + 1650))>=(528 + 848)) and ((1437 -(1179 + 257))==v212)) then while true do if ((1000>(167 + 25)) and ((0 + 0)==v213)) then v214=v88[v210];for v272=0, #v214 do local v273=0 + 0;local v274;local v275;local v276;local v277;while true do if ((v273==(0 -0)) or ((14893 -11411)<=(4568 -1685))) then v274=0 + 0;v275=nil;v273=12 -(7 + 4);end if ((v273==(1 + 1)) or (3786<(1821 + 297))) then while true do if ((v274==1) or (2080>=(2130 + 112))) then v277=v275[4 -2];if (((1307 -(12 + 19))<(5402 -(1291 + 60))) and (v276==v89) and (v277>=v180)) then local v290=1683 -(682 + 1001);while true do if ((((5866 -(174 + 391)) -2555)>(4905 -3186)) and (v290==(0 -0))) then v181[v277]=v276[v277];v275[2 -1]=v181;break;end end end break;end if (((2064 -(727 + 165))>(698 -(1685 -(432 + 914)))) and (v274==(0 + 0))) then local v288=0 + 0;while true do if ((v288==0) or (1101<=(1139 -(37 + 602)))) then v275=v214[v272];v276=v275[1 + 0];v288=1;end if ((v288==1) or ((3947 -2622)>=(5112 -3055))) then v274=3 -(2 -0);break;end end end end break;end if ((v273==((3252 -1318) -(610 + 1323))) or (382>2467)) then v276=nil;v277=nil;v273=3 -1;end end end break;end end break;end if ((v212==(470 -(23 + (867 -420)))) or ((2 + 17)==(3719 -(34 + 53)))) then local v257=0 + 0;while true do if (((1125 -(427 + 22 + 233))<1954) and (v257==(0 + 0))) then v213=0 -0;v214=nil;v257=2 -1;end if ((v257==(1 + 0)) or ((4103 -(420 + 1548))<(1259 -304))) then v212=1;break;end end end end break;end end end break;end end else local v182=0 + 0;local v183;local v184;local v185;while true do if ((v182==(1 + 0)) or ((9972 -6230)==(5124 -(138 + 810)))) then v185=nil;while true do if ((1509<=(3310 -1665)) and (v183==(3 -2))) then while true do if ((v184==(0 -0)) or ((1184 -(60 + 954))==(1903 -1183))) then v185=v91[1679 -(948 + 729)];v89[v185](v13(v89,v185 + (1030 -(18 + 1011)),v91[893 -(330 + 560)]));break;end end break;end if ((((27025 -15425) -7475)<((4809 -(43 + 234)) -(241 + 110))) and ((0 + 0)==v183)) then v184=0 + 0;v185=nil;v183=1;end end break;end if (((331 -(110 + 221))==v182) or ((1184 -(182 + 98))==(12942 -(11105 -(811 + 798))))) then v183=0 -0;v184=nil;v182=1 + 0;end end end v75=v75 + 1;break;end end break;end end end end A,B=v34(v11(v79));if  not A[1] then local v93=0;local v94;while true do if (v93==0) then v94=v42[4][v75] or "?";error("Script error at ["   .. v94   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v36(v35(),{},v24)(...);end;vv9(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end end end
