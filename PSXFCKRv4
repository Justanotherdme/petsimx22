do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (4==v0) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==5) then v15=function(v23,v24,...)local v25=1;local v26;v23=v5(v4(v23,5),"..",function(v37)if (v2(v37,2)==79) then v26=v1(v4(v37,1,1));return "";else local v71=0;local v72;while true do if (v71==0) then v72=v3(v1(v37,16));if v26 then local v103=v6(v72,v26);v26=nil;return v103;else return v72;end break;end end end end);local function v27(v38,v39,v40)if v40 then local v73=(v38/((1026 -(685 + 339))^(v39-(2 -(2 -1)))))%((1 + 1)^(((v40-(1986 -(148 + 1837))) -(v39-(1 -0))) + (86 -(22 + 63))));return v73-(v73%((1295 -307) -(36 + 951)));else local v74=(2 + 0)^(v39-(315 -((1530 -(912 + 466)) + (474 -312))));return (((v38%(v74 + v74))>=v74) and (872 -(240 + 631))) or (1367 -(493 + 874));end end local function v28()local v45=v2(v23,v25,v25);v25=v25 + 1;return v45;end local function v29()local v46=0 -0;local v47;local v48;while true do if ((1445 -(409 + 1036))==v46) then v47,v48=v2(v23,v25,v25 + (4 -2));v25=v25 + (9 -7);v46=1 + 0;end if ((60 -((945 -(928 + 11)) + 53))==v46) then return (v48 * (898 -642)) + v47;end end end local function v30()local v49,v50,v51,v52=v2(v23,v25,v25 + (9 -6));v25=v25 + 2 + 2;return (v52 * 16777216) + (v51 * (176878 -111342)) + (v50 * ((2415 -982) -(654 + 523))) + v49;end local function v31()local v53=0 + 0;local v54;local v55;while true do if (v53==(32 -(25 + 1 + 6))) then v54=v30();v55=v30();v53=1 + 0;end if (v53==(1068 -(249 + 818))) then return (( -(851 -(7 + 842)) * v27(v55,44 -12)) + (1921 -(894 + 1026))) * ((2 + 0)^(v27(v55,101 -80,(36 + 76) -81) -(564 + 459))) * ((((v27(v55,1407 -(1362 + (93 -(37 + 12))),36 -16) * (2^(14 + 18))) + v54)/((2 + 0)^(21 + (148 -117)))) + 1 + 0);end end end local function v32(v41)local v56=(849 -(111 + 738)) + 0;local v57;local v58;while true do if (v56==(252 -(210 + (1390 -(875 + 476))))) then return v7(v58);end if (v56==(1 -0)) then v57=v4(v23,v25,(v25 + v41) -(762 -(157 + 293 + 311)));v25=v25 + v41;v56=2;end if (v56==0) then v57=nil;if  not v41 then v41=v30();if (v41==(0 + 0)) then return "";end end v56=3 -2;end if (v56==(4 -2)) then v58={};for v83=1, #v57 do v58[v83]=v3(v2(v4(v57,v83,v83)));end v56=681 -(120 + 558);end end end local v33=v30;local function v34(...)return {...},v12("#",...);end local function v35()local v59=1183 -(973 + 210);local v60;local v61;local v62;local v63;local v64;local v65;local v66;local v67;while true do if ((0 -0)~=v59) then else local v80=34 -(32 + 2);while true do if (v80~=(4 -3)) then else v59=1 -0;break;end if ((1651 -(1452 + 199))==v80) then v60=0 -0;v61=nil;v80=1921 -(95 + 1825);end end end if (1==v59) then local v81=0 -0;while true do if (v81==(0 + 0)) then v62=nil;v63=nil;v81=698 -(285 + 412);end if (v81==(1362 -(1077 + 284))) then v59=2;break;end end end if ((1880 -(326 + 1552))==v59) then local v82=0 + 0;while true do if ((1 + 0)~=v82) then else v59=2 + 1;break;end if (v82==(0 -0)) then v64=nil;v65=nil;v82=1257 -(83 + 1173);end end end if (v59==(545 -(520 + 21))) then while true do if (v60~=(1 -0)) then else local v100=0 -0;while true do if (v100==(1432 -(1199 + 233))) then v63=nil;v64=nil;v100=2 -1;end if (1==v100) then v60=2;break;end end end if (v60~=(207 -(190 + 14))) then else v67=nil;while true do local v104=0 -0;while true do if (v104==(0 + 0)) then if (v61==(0 + 0)) then local v110=0 -0;local v111;while true do if (v110==(0 + 0)) then v111=0;while true do if (v111~=(0 + 0)) then else v62={};v63={};v111=1 + 0;end if (v111==1) then v64={};v61=1 + 0;break;end end break;end end end if (v61==2) then local v112=0 -0;while true do if (v112==(775 -(436 + 339))) then local v120=1766 -(411 + 1355);while true do if (v120~=(1663 -(674 + 989))) then else local v127=859 -(304 + 555);while true do if (0~=v127) then else for v190=1,v66 do local v191=1486 -(747 + 739);local v192;local v193;while true do if ((783 -(503 + 279))==v191) then if (v192==(1 + 0)) then v193=v28()~=(0 + 0);elseif (v192==(1 + 1)) then v193=v31();elseif (v192==(2 + 1)) then v193=v32();end v67[v190]=v193;break;end if ((0 + 0)~=v191) then else local v215=0 + 0;while true do if (v215~=(1 + 0)) then else v191=1771 -(1493 + 277);break;end if (v215==(38 -(13 + 25))) then v192=v28();v193=nil;v215=1;end end end end end v65[1639 -(525 + 1111)]=v28();v127=4 -3;end if (v127~=(51 -(39 + 11))) then else v120=714 -(248 + 465);break;end end end if ((1186 -(307 + 878))==v120) then v112=1;break;end end end if (1~=v112) then else for v122=2 -1,v30() do local v123=0 -0;local v124;local v125;local v126;while true do if (v123==(0 -0)) then v124=0 + 0;v125=nil;v123=1;end if (v123==(1 + 0)) then v126=nil;while true do if (0~=v124) then else local v194=827 -(173 + 654);while true do if (v194==0) then v125=1107 -(1094 + 13);v126=nil;v194=2 -1;end if (v194==(1 -0)) then v124=1;break;end end end if (v124==1) then while true do if (v125==(788 -(716 + 72))) then v126=v28();if (v27(v126,1,1 + 0)==(1345 -(1001 + 344))) then local v224=0 + 0;local v225;local v226;local v227;local v228;while true do if (v224==(1730 -(1649 + 79))) then while true do if (v225==(3 + 0)) then if (v27(v227,1507 -(702 + 802),3)==(4 -3)) then v228[1942 -(702 + 1236)]=v67[v228[4]];end v62[v122]=v228;break;end if (v225==(517 -(311 + 206))) then local v264=0 + 0;while true do if (v264==(874 -(418 + 456))) then local v288=1585 -(1240 + 345);while true do if ((1 + 0)==v288) then v264=1 + 0;break;end if (v288==0) then v226=v27(v126,645 -(549 + 94),1 + 2);v227=v27(v126,4,263 -(225 + 32));v288=1 -0;end end end if (v264~=1) then else v225=1 + 0;break;end end end if (v225==(1564 -(177 + 1386))) then local v265=1710 -(572 + 1138);local v266;while true do if (0==v265) then v266=0 -0;while true do if (v266==0) then v228={v29(),v29(),nil,nil};if (v226==0) then local v296=0;local v297;local v298;while true do if (v296==(0 + 0)) then v297=0 -0;v298=nil;v296=2 -1;end if (v296==(1 + 0)) then while true do if (v297==(0 + 0)) then v298=1520 -(1271 + 249);while true do if (v298~=(871 -(115 + 756))) then else v228[3]=v29();v228[17 -13]=v29();break;end end break;end end break;end end elseif (v226==(1 + 0)) then v228[1933 -(1064 + 866)]=v30();elseif (v226==(1754 -(1730 + 22))) then v228[428 -(170 + 255)]=v30() -((2 + 0)^16);elseif (v226==3) then local v312=0 + 0;local v313;local v314;local v315;while true do if (v312~=(808 -(772 + 36))) then else v313=0 + 0;v314=nil;v312=3 -2;end if (v312==(194 -(96 + 97))) then v315=nil;while true do if ((0 -0)~=v313) then else local v323=0 + 0;while true do if (v323==(275 -(143 + 131))) then v313=2 -1;break;end if (v323~=0) then else v314=0;v315=nil;v323=1 + 0;end end end if (v313==1) then while true do if (v314==(0 -0)) then v315=0 -0;while true do if (v315==(0 -0)) then v228[3 + 0]=v30() -((940 -(507 + 431))^(10 + 6));v228[12 -8]=v29();break;end end break;end end break;end end break;end end end v266=412 -(283 + 128);end if (1==v266) then v225=6 -4;break;end end break;end end end if (v225==(1 + 1)) then local v267=0 -0;local v268;while true do if (v267~=(0 -0)) then else v268=509 -(353 + 156);while true do if (v268==(757 -(332 + 424))) then v225=1206 -(1183 + 20);break;end if (v268~=(1033 -(647 + 386))) then else local v293=0 + 0;while true do if (v293==(0 + 0)) then if (v27(v227,961 -(535 + 425),1)~=(928 -(626 + 301))) then else v228[2]=v67[v228[694 -(191 + 501)]];end if (v27(v227,1143 -(904 + 237),1371 -(488 + 881))==(1095 -(557 + 537))) then v228[3]=v67[v228[1868 -(516 + 1349)]];end v293=2 -1;end if (v293~=1) then else v268=1 + 0;break;end end end end break;end end end end break;end if (v224==(1829 -(518 + 1310))) then local v253=0;while true do if (v253==(580 -(240 + 340))) then local v269=122 -(53 + 69);while true do if (v269~=(1 -0)) then else v253=2 -1;break;end if (v269==0) then v227=nil;v228=nil;v269=1 -0;end end end if (v253==1) then v224=2;break;end end end if (v224==(0 + 0)) then v225=0;v226=nil;v224=1;end end end break;end end break;end end break;end end end v61=1389 -(639 + 747);break;end end end v104=1 + 0;end if ((1645 -(1100 + 544))~=v104) then else if (3~=v61) then else local v113=0 -0;local v114;local v115;while true do if (v113==(0 + 0)) then v114=0 + 0;v115=nil;v113=1 + 0;end if (v113~=1) then else while true do if (v114==0) then v115=0 -0;while true do local v128=690 -(636 + 54);while true do if (v128==0) then if (v115==1) then return v65;end if (v115==(1050 -(424 + 626))) then local v206=1192 -(474 + 718);while true do if (v206~=(0 + 0)) then else for v236=1 + 0,v30() do v63[v236-1]=v35();end for v238=1,v30() do v64[v238]=v30();end v206=2 -1;end if (1~=v206) then else v115=1 + 0;break;end end end break;end end end break;end end break;end end end if (v61==1) then local v116=0;while true do if (v116==(0 -0)) then local v121=0;while true do if (v121~=1) then else v116=1 -0;break;end if (v121==(32 -(22 + 10))) then v65={v62,v63,nil,v64};v66=v30();v121=1;end end end if (v116==(3 -2)) then v67={};v61=2;break;end end end break;end end end break;end if (v60~=0) then else v61=1066 -(504 + 562);v62=nil;v60=1 + 0;end if (v60==(4 -2)) then local v101=0;local v102;while true do if (v101==(386 -(340 + 46))) then v102=0 + 0;while true do if (v102==(1 + 0)) then v60=3;break;end if (v102~=(0 -0)) then else local v117=0 + 0;while true do if (v117==(0 + 0)) then v65=nil;v66=nil;v117=1 + 0;end if (v117~=(1718 -(978 + 739))) then else v102=530 -(152 + 377);break;end end end end break;end end end end break;end if (v59==(3 + 0)) then v66=nil;v67=nil;v59=6 -2;end end end local function v36(v42,v43,v44)local v68=v42[1];local v69=v42[2];local v70=v42[3];return function(...)local v75=1;local v76= -1;local v77={...};local v78=v12("#",...) -1;local function v79()local v85=v68;local v86=v69;local v87=v70;local v88=v34;local v89={};local v90={};local v91={};for v97=1885 -(1151 + 734),v78 do if ((v97>=v87) or ((3108 -(336 + 980))>=2674)) then v89[v97-v87]=v77[v97 + (839 -(290 + 548))];else v91[v97]=v77[v97 + 1 + 0];end end local v92=(v78-v87) + (1 -0) + (0 -0);local v93;local v94;while true do local v98=1554 -(1511 + 23 + 20);local v99;while true do if ((v98==(0 + 0)) or ((6789 -5265)<=(382 -220))) then v99=(31 + 33) -(41 + 23);while true do if ((((2823 -(1057 + 527)) + 20)==(2039 -(78 + 702))) and ((945 -(272 + 673))==v99)) then local v109=0 + 0;while true do if ((v109==(1 -0)) or (2148<=(2361 -(110 + (1138 -(67 + 21)))))) then v99=383 -(329 + 53);break;end if (((196 -(34 + 94))<=4079) and (v109==(0 -0))) then v93=v85[v75];v94=v93[1 + (0 -0)];v109=1;end end end if ((290<=(1541 + 270)) and (v99==((2 -1) + 0))) then if ((v94<=(3 + 9)) or ((9487 -7188)<=(34 + 24))) then if ((v94<=(1759 -(1045 + 709))) or ((11364 -6667)<=(233 + 2674))) then if ((v94<=(1 + 1)) or ((2492 + 1527)<=(41 + 504 + 375))) then if ((v94<=(0 -0)) or ((1750 + 676)>=(15937 -10989))) then local v129=0 + 0;local v130;while true do if (((262 -125)<(1541 + 931)) and (((831 -(275 + 556)) + 0)==v129)) then v130=v93[3 -1];v91[v130](v13(v91,v130 + (4 -3),v93[(471 + 835) -(613 + 690)]));break;end end elseif (((6267 -(963 + 342))>=1525) and (v94==(1 + 0))) then if (((2384 + 314)>=(210 + (4169 -(1097 + 588)))) and (v93[1113 -(754 + 357)]==v91[v93[1166 -(854 + 246 + 62)]])) then v75=v75 + ((2030 -(310 + 111)) -(788 + 820));else v75=v93[8 -5];end else v91[v93[159 -(8 + 149)]]=v36(v86[v93[4 -(227 -(179 + 47))]],nil,v44);end elseif ((v94<=(3 + 0)) or (4910<=2055)) then for v147=v93[2 + 0],v93[3] do v91[v147]=nil;end elseif (((3669 -(373 + 894))==2402) and (v94>4)) then v91[v93[(276 + 92) -(20 + 346)]]=v44[v93[7 -(4 -0)]];else do return;end end elseif ((v94<=(31 -23)) or ((7776 -4507)<=(3458 -1708))) then if ((v94<=6) or ((175 + 435)>(2785 + 1127))) then local v131=0;local v132;local v133;local v134;local v135;local v136;while true do if (((0 + 0)==v131) or (741>(11729 -7145))) then v132=0 + 0;v133=nil;v131=3 -(1 + 1);end if (((1629 -(191 + 972))<=(2803 + 1284)) and (v131==(1 + 0))) then v134=nil;v135=nil;v131=2 + 0;end if ((((2027 + 4434) -(1389 + 226))>(3421 -(419 + 175))) and (v131==(1346 -(145 + 1199)))) then v136=nil;while true do if ((v132==(0 -0)) or ((1715 + 390)>(3488 -(1249 + 72)))) then local v216=935 -(617 + 318);while true do if ((1==v216) or ((2485 + 418)==(593 -240))) then v132=1 + 0;break;end if (((151 + 1989)<(1870 + 1900)) and ((0 -0)==v216)) then v133=0;v134=nil;v216=1228 -(741 + 486);end end end if (((2 -(1 -0))==v132) or ((1707 -(22 + 4))>(4369 -(230 + 1526)))) then v135=nil;v136=nil;v132=8 -(6 + 0);end if (((710 + 942)>(3300 -2015)) and ((1 + 1)==v132)) then while true do if ((v133==(797 -(417 + 380))) or ((3950 -((670 -492) + 109))<=(1877 + 1051))) then local v240=49 -(20 + 29);while true do if ((v240==(701 -(692 + 8))) or (3365==(2517 -(275 + 378)))) then v133=1;break;end if ((v240==0) or ((2197 + 789)<(1557 -(92 + 54)))) then local v256=0 -0;while true do if (((252 -(87 + 60))<294) and (v256==(698 -(112 + 586)))) then v134=v86[v93[10 -(991 -(127 + 857))]];v135=nil;v256=1;end if ((v256==(2 -1)) or ((4309 -(167 + 653))>4800)) then v240=1;break;end end end end end if ((2473==2473) and (v133==(7 -5))) then for v247=1 + 0,v93[1655 -((1830 -1295) + 1116)] do local v248=0 -0;local v249;local v250;while true do if ((1==v248) or ((2678 -(288 + (1375 -(144 + 933))))<=(1355 -677))) then while true do if ((v249==(1 -0)) or ((2572 + 1402)==(2349 -((1987 -1526) + (3416 -2201))))) then if ((v250[301 -(106 + 194)]==(350 -(201 + 127))) or (((703 -458) + 397)>3454)) then v136[v247-(2 -1)]={v91,v250[1798 -(1031 + 764)]};else v136[v247-1]={v43,v250[3]};end v90[ #v90 + (1742 -(1657 + 84))]=v136;break;end if ((v249==(0 -0)) or ((5938 -(1678 + 258))<=1352)) then local v280=0 -0;while true do if ((v280==(2 -1)) or ((1408 -(621 + (822 -(357 + 291))))>=(388 + 4396))) then v249=4 -3;break;end if ((v280==0) or (((15294 -10687) -1363)<2565)) then v75=v75 + (2 -1);v250=v85[v75];v280=3 -(1 + 1);end end end end break;end if (((3671 -(614 + 401))<(3978 + 184)) and (v248==(0 -0))) then v249=0 -0;v250=nil;v248=1;end end end v91[v93[2]]=v36(v134,v135,v44);break;end if (((5177 -2859)<=(5260 -(95 + 283))) and ((1 + 0 + 0)==v133)) then local v242=0;while true do if ((4000==(15141 -11141)) and (v242==(340 -(196 + 144)))) then v136={};v135=v10({},{__index=function(v258,v259)local v270=0 + 0;local v271;while true do if (((913 + 2366)==(5808 -2529)) and (v270==(0 + 0))) then v271=v136[v259];return v271[1 + 0][v271[2 + 0]];end end end,__newindex=function(v260,v261,v262)local v272=0;local v273;local v274;while true do if ((400==((1305 -953) + 2 + 46)) and (v272==1)) then while true do if ((v273==0) or ((5774 -(815 + 230))<(170 + 1119))) then v274=v136[v261];v274[1036 -((1032 -229) + 232)][v274[6 -4]]=v262;break;end end break;end if ((v272==0) or ((3350 -2216)>=(6157 -3937))) then v273=1119 -(548 + 571);v274=nil;v272=1;end end end});v242=1 -(921 -(862 + 59));end if ((4828==(6210 -(486 + 896))) and (v242==(1 + 0))) then v133=1 + 1;break;end end end end break;end end break;end end elseif ((v94>(1 + 6)) or ((218 + 3680)>(5792 -(888 + 30)))) then v75=v93[3];elseif ((((25354 -17668) -(5958 -2496))==(3497 + 727)) and (v91[v93[3 -1]]==v93[351 -(213 + 31 + 103)])) then v75=v75 + 1;else v75=v93[7 -4];end elseif (((846 + 558)==(1414 -(9 + 1))) and (v94<=(1021 -(546 + 465)))) then if ((2141<3772) and (v94>(1391 -((2757 -(1289 + 240)) + 154)))) then local v154=0 -0;local v155;while true do if (((0 + 0)==v154) or ((3388 + 812)<=(2107 -(93 + 309)))) then v155=v93[1474 -(461 + 1011)];v91[v155](v91[v155 + (1026 -(927 + 98))]);break;end end else v91[v93[2]]={};end elseif ((v94>(10 + 1)) or (3502>(210 + 14 + 4313))) then v91[v93[2 + 0]][v93[517 -(135 + (1718 -(424 + 915)))]]=v91[v93[4]];else v44[v93[1436 -(477 + 956)]]=v91[v93[2]];end elseif ((4866>=(4890 -(290 + 1133))) and (v94<=19)) then if (((1606 -(30 + 3))<((5612 -2108) -(941 + 431))) and (v94<=(1083 -(806 + 262)))) then if ((v94<=(55 -(110 -68))) or (((4999 -(1178 + 44)) -1502)>=3259)) then local v137=1734 -(1582 + 152);local v138;local v139;local v140;while true do if ((v137==(0 -0)) or ((55 + (989 -339))>(3906 + 130))) then v138=v93[1 + 1];v139=v91[v138];v137=1 + 0;end if ((v137==1) or ((8270 -4836)<(1023 -426))) then v140=v93[4 -1];for v203=3 -2,v140 do v139[v203]=v91[v138 + v203];end break;end end elseif ((v94>14) or ((1594 -(43 + 165))<=(528 + (1067 -(307 + 219))))) then local v161=1871 -((1579 -(646 + 32)) + 970);local v162;local v163;local v164;while true do if ((v161==(0 -0)) or ((90 + 393)>(1458 -(69 + 414)))) then v162=0;v163=nil;v161=1 -0;end if (((1351 + 159)<=(1408 + 207)) and (v161==(3 -2))) then v164=nil;while true do if ((v162==1) or (2644==(3607 + 350))) then while true do if ((((6028 -(1487 + 494)) -1412)<=(3964 + 644)) and (v163==(0 -0))) then v164=v93[2];v91[v164]=v91[v164]();break;end end break;end if ((v162==0) or (4616==(7722 -2770))) then v163=0 -0;v164=nil;v162=1035 -(638 + 396);end end break;end end else v91[v93[6 -4]]=v93[1336 -((802 -384) + 915)];end elseif ((v94<=(15 + 2)) or ((9507 -6427)<=(940 -(7 + 6)))) then if ((v94>(9 + 7)) or (3272<(3140 -(180 + (2149 -(597 + 999)))))) then local v167=0 + (0 -0);local v168;local v169;while true do if (((4777 -(67 + 283))>(5027 -(1937 + 40))) and (v167==(1926 -(460 + 1466)))) then v168=304 -(102 + 202);v169=nil;v167=2 -1;end if ((1040>=(655 -(54 + 269))) and (v167==((2 -1) -0))) then while true do if (((5457 -2327)==3130) and (v168==((0 -0) + 0))) then v169=v93[1558 -(595 + 961)];v91[v169]=v91[v169](v13(v91,v169 + 1 + 0,v76));break;end end break;end end else v91[v93[1 + 1]][v93[3]]=v93[4];end elseif (((3916 + 391)>=1543) and (v94>18)) then v91[v93[1037 -(738 + 297)]]=v93[5 -2]~=0;else v91[v93[2 + 0]]();end elseif ((v94<=(14 + (11 -3))) or ((488 -231)>(2899 -(275 + 173)))) then if (((1078 -(29 + 56))<((1093 + 1176) -(256 + 427))) and (v94<=(1229 -(975 + 234)))) then local v141=0 -(29 -(12 + 17));local v142;local v143;local v144;local v145;local v146;while true do if ((((8283 -4488) -2447)<((12760 -(960 + 219)) -(7043 -(307 + 85)))) and (v141==(1481 -((63 -29) + 1446)))) then local v199=0 + 0;while true do if (((617 -(421 + 182))<=(3765 + 1132)) and ((822 -((2254 -(1061 + 708)) + 337))==v199)) then v144=nil;v145=nil;v199=1 + 0;end if (((516 -(163 + 352))==v199) or (3920<=(5141 -3192))) then v141=1 + 1;break;end end end if ((v141==(1024 -(733 + 291))) or (((51884 -37818) -10441)<(1230 -710))) then local v200=0 -0;while true do if (((145 -25)<(1038 + 3525)) and (v200==(0 -0))) then v142=0 -0;v143=nil;v200=703 -(427 + 275);end if (((1950 -1183)==(1569 -802)) and (v200==(550 -(342 + 207)))) then v141=1 + 0;break;end end end if ((v141==(2 + 0)) or ((6592 -(220 + 1454))<(5287 -1889))) then v146=nil;while true do if ((2460<(2766 + 1987)) and (v142==(2 -1))) then local v217=0;local v218;while true do if (((2967 -(156 + 157 + 930))>=(2724 -(1130 + 19))) and (v217==0)) then v218=0 + 0;while true do if (((0 + 0 + 0)==v218) or ((1794 + 1832)==((2462 -1443) + 427))) then v76=(v145 + v143) -((1121 -(655 + 465)) + 0);v146=0;v218=1;end if ((v218==(791 -(619 + 171))) or ((19162 -14275)==(58 + 158))) then v142=4 -2;break;end end break;end end end if ((v142==(1 + 1)) or (2404>(9010 -5215))) then for v222=v143,v76 do local v223=541 -(163 + 378);while true do if ((v223==(0 + 0 + 0)) or ((1356 + 593)<(518 -186))) then v146=v146 + (1782 -(757 + 1024));v91[v222]=v144[v146];break;end end end break;end if ((v142==(0 -0)) or ((4193 -(815 + 955))<(1051 -(119 + 726)))) then local v219=0 -0;local v220;while true do if ((669<2074) and (v219==((0 -0) -0))) then v220=0 + 0;while true do if ((v220==(4 -3)) or ((1997 -(30 + 722))==(5 + 1589))) then v142=1;break;end if (((2033 + (1850 -1355))<=(5983 -(976 + 127))) and (v220==(0 -0))) then v143=v93[1448 -(829 + 617)];v144,v145=v88(v91[v143](v13(v91,v143 + ((1869 -1237) -(531 + 100)),v93[159 -(67 + 89)])));v220=2 -1;end end break;end end end end break;end end elseif (((1575 -(447 + 31))<4054) and (v94==21)) then v91[v93[2]]=v43[v93[1 + 2]];else v91[v93[1711 -(636 + 1073)]]=v91[v93[513 -(419 + 91)]];end elseif (((1879 + 600)<(3415 -(574 + 215))) and (v94<=(1905 -(342 + 1539)))) then if ((645<(4168 + 351)) and (v94>(533 -(196 + (488 -(52 + 122)))))) then local v177=0;local v178;local v179;local v180;while true do if ((81==81) and (v177==(0 + 0))) then v178=0 + 0;v179=nil;v177=3 -2;end if (((3114 + 1754)>(1193 -843)) and ((1363 -(1015 + 347))==v177)) then v180=nil;while true do if (((140 -((298 -218) + 1))<=(1386 + 2215)) and (v178==1)) then for v243=2 -1, #v90 do local v244=0 -0;local v245;local v246;while true do if (((4771 + 192)==(14516 -9553)) and (v244==(1333 -(690 + 642)))) then while true do if ((v245==0) or ((7236 -3663)<=(5091 -3334))) then v246=v90[v243];for v281=0, #v246 do local v282=0 -0;local v283;local v284;local v285;local v286;local v287;while true do if (((114 + 37)<(2997 -2082)) and (2==v282)) then v287=nil;while true do if ((1908<4634) and (v283==(122 -(116 + 4)))) then while true do if (((5038 -(1645 + (495 -(28 + 199))))>(1279 -725)) and ((1322 -(427 + 895))==v284)) then local v306=0 -0;local v307;while true do if ((v306==(1493 -(265 + 1228))) or (721<=(175 + 80))) then v307=738 -(691 + 47);while true do if (((6200 -(324 + 1122))<(5305 -(237 + 122))) and (v307==(2 -1))) then v284=(200 -(128 + 70)) -1;break;end if (((9940 -7131)>(9570 -6820)) and (v307==(0 -0))) then v285=v246[v281];v286=v285[1];v307=1;end end break;end end end if (((10494 -7788)>=(3890 -(442 + 871))) and (v284==((4 -2) -1))) then v287=v285[1 + 1];if (((v286==v91) and (v287>=v179)) or ((3670 -896)<630)) then local v310=0;local v311;while true do if ((((8927 -4281) -1309)>(2771 -(11 + 992))) and (v310==(1973 -(368 + 1605)))) then v311=0 -(906 -(330 + 576));while true do if ((v311==(0 + 0)) or ((1243 -(588 + 486))>=((1978 -(1558 + 38)) + 875))) then v180[v287]=v286[v287];v285[1]=v180;break;end end break;end end end break;end end break;end if (((6282 -(865 + 501))>(5369 -3091)) and (v283==(0 + 0))) then local v299=503 -(312 + 191);while true do if ((((1750 -(851 + 899)) + (1456 -(812 + 644)))==v299) or (770>(1684 -(571 + 124)))) then v284=0 -0;v285=nil;v299=1 -0;end if ((v299==1) or ((5614 -2701)<1147)) then v283=2 -1;break;end end end if (((4252 -(1454 + 238))>=(3630 -((1546 -(146 + 829)) + 1251))) and (v283==(1 + 0))) then local v300=(596 -(331 + 265)) -(0 -0);while true do if ((v300==(1 + 0)) or ((333 + 473)>=4970)) then v283=1188 -(350 + 836);break;end if (((1431 -(436 + 995))==v300) or ((5125 -1684)<((3369 + 3084) -4431))) then v286=nil;v287=nil;v300=1 -0;end end end end break;end if ((((4897 -(220 + 253)) -(360 + 212))==(4153 -(17 + 284))) and (v282==(0 + 0 + 0))) then v283=0;v284=nil;v282=1;end if ((1==v282) or (3851<=1168)) then v285=nil;v286=nil;v282=1855 -(395 + 1458);end end end break;end end break;end if (((2589 -1628)==(1186 -(64 + 161))) and (v244==0)) then v245=0 -0;v246=nil;v244=1 + 0;end end end break;end if ((v178==(0 + 0)) or ((1059 + 833)==(11516 -7055))) then v179=v93[1 + (2 -1)];v180={};v178=1;end end break;end end else local v181=0 + 0 + 0;local v182;local v183;while true do if (((1974 -(166 + 1565))<=(1558 + 461 + 989)) and ((1 + (0 -0))==v181)) then for v221=v182 + 1,v93[2 + 1] do v8(v183,v91[v221]);end break;end if ((v181==(0 -(0 + 0))) or (4418==(3977 -2092))) then local v208=0 -0;while true do if ((v208==0) or ((3134 + 612)<=(14087 -11207))) then v182=v93[2 + (0 -0)];v183=v91[v182];v208=(158 -(102 + 55)) -0;end if (((3740 + 1216)>=(166 -(175 -80))) and (v208==(1 + 0))) then v181=1659 -(1196 + 462);break;end end end end end elseif ((v94>(24 + 1)) or ((9492 -(5873 -(1149 + 120)))==3625)) then local v184=0 + 0;local v185;local v186;while true do if ((v184==(2 -1)) or ((9260 -(6565 -(795 + 458)))<(2446 -(1483 + 120)))) then while true do if ((v185==(0 + (1484 -(1099 + 385)))) or ((6058 -(919 + 62 + 227))<=(6023 -2107))) then v186=v93[1 + 1];v91[v186]=v91[v186](v13(v91,v186 + ((1 + 0) -(201 -(122 + 79))),v93[2 + 1]));break;end end break;end if ((v184==(0 -0)) or ((1186 -((351 -(56 + 243)) + 111))>(3401 -(312 + 1185)))) then v185=0 -0;v186=nil;v184=1;end end else local v187=0 -0;local v188;local v189;while true do if (((5167 -2929)<4284) and (v187==(0 -0))) then v188=v93[2 + 0];v189=v91[v93[3]];v187=4 -3;end if ((v187==(1 + 0)) or ((2545 -(425 + 1064))>(5254 -(21 + 258 + 75)))) then v91[v188 + 1 + 0]=v189;v91[v188]=v189[v93[3 + 1]];break;end end end v75=v75 + (1472 -(29 + 1442));break;end end break;end end end end A,B=v34(v11(v79));if  not A[1] then local v95=0;local v96;while true do if (v95==0) then v96=v42[4][v75] or "?";error("Script error at ["   .. v96   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v36(v35(),{},v24)(...);end;vv9(),...);break;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end
